{"version":3,"sources":["app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/VesselDown.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/utils/constant.js","app/components/MatxLayout/Layout1/Layout1.jsx","app/utils/utils.js","app/components/Typography.js"],"names":["BrandRoot","styled","Box","display","alignItems","justifyContent","StyledSpan","Span","fontSize","marginLeft","LabLogo","width","marginRight","marginTop","Labtitle","H4","color","fontWeight","IMG","theme","breakpoints","down","Brand","children","sx","py","src","className","StyledH3","lineHeight","AnalyticsRoot","Card","height","ChartHeader","position","zIndex","backgroundColor","padding","borderBottom","convertHexToRGB","palette","text","disabled","StyledButton","Button","FlexBox","RangePicker","DatePicker","VesselDataDownload","handleDialogClose","shouldOpenEditorDialog","useState","startDate","setStartDate","endDate","setEndDate","loading","setLoading","generateDateList","start","Date","end","dates","currentDate","push","toISOString","split","setDate","getDate","generateUrlList","dateList","map","date","year","month","day","a","dataList","lst","zip","JSZip","url","fetch","response","blob","file","fileName","pop","folder","generateAsync","type","zipFile","saveAs","Backdrop","open","overflow","IconButton","onClick","Icon","Grid","container","spacing","p","pb","mt","mb","style","size","showTime","hideDisabledOptions","defaultValue","moment","value","format","onCalendarChange","dateStrings","info","futureMonth","add","next","_d","disabledDate","current","allowClear","item","lg","md","sm","xs","textAlign","CircularProgress","TopbarRoot","top","transition","boxShadow","themeShadows","TopbarContainer","paddingLeft","paddingRight","background","primary","main","ContentBox","ChunkBox","marginBottom","InfoBox","Options","margin","cursor","Layout1Topbar","borderRadius","border","anchor","right","state","setState","setShouldOpenEditorDialog","toggleDrawer","event","key","to","href","target","rel","Drawer","onClose","handleOpenWindow","React","memo","Layout1Root","default","overflowY","overflowX","flexDirection","LayoutContainer","flexGrow","verticalAlign","Layout1","useSettings","settings","updateSettings","layout1Settings","topbarTheme","themes","topbar","useTheme","isMdScreen","useMediaQuery","ref","useRef","layoutClasses","useEffect","sidebarMode","leftSidebar","mode","show","ThemeProvider","fixed","MatxSuspense","hex","c","match","slice","join","test","substring","length","getApiLocation","location","replace","toLowerCase","handleOutputName","selectedValue","StyledBox","textTransformStyle","ellipsis","textTransform","whiteSpace","textOverflow","H1","props","clsx","component","Paragraph"],"mappings":"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","file":"static/js/101.3488e0df.chunk.js","sourcesContent":["import React from 'react'\nimport { Span } from '../Typography'\nimport { styled, Box } from '@mui/system'\nimport { H4 } from 'app/components/Typography'\n\nconst BrandRoot = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n}))\n\nconst StyledSpan = styled(Span)(() => ({\n    fontSize: 18,\n    marginLeft: '.5rem',\n}))\n\nconst LabLogo = styled('img')(() => ({\n    width: '50px',\n    marginRight: '6px',\n    marginTop: '-1px',\n}))\n\nconst Labtitle = styled(H4)(() => ({\n    width: '160px',\n    color: '#107EBC',\n    fontWeight: 400,\n    fontSize: '15px',\n    marginLeft: '-5px',\n}))\n\nconst IMG = styled('img')(({ theme }) => ({\n    width: '240px',\n    marginLeft: '15px',\n    [theme.breakpoints.down('md')]: {\n        display: 'none',\n    },\n}))\n\nconst Brand = ({ children }) => {\n    return (\n        <BrandRoot sx={{ py: 1 }}>\n            <Box display=\"flex\" alignItems=\"center\">\n                {/* <MatxLogo /> */}\n                <LabLogo src={'/assets/images/logos/one.png'} />\n                <StyledSpan className=\"sidenavHoverShow\">\n                    <Labtitle>Ocean Noise Explorer</Labtitle>\n                </StyledSpan>\n                <IMG src={'/assets/images/logos/uw.png'} />\n            </Box>\n            <Box className=\"sidenavHoverShow\">{children || null}</Box>\n        </BrandRoot>\n    )\n}\n\nexport default Brand\n","import { Box, styled } from '@mui/system'\nimport { IconButton, Icon } from '@mui/material'\nimport Backdrop from '@mui/material/Backdrop'\nimport { convertHexToRGB } from 'app/utils/utils'\nimport { Card, Grid, Button, CircularProgress } from '@mui/material'\nimport { DatePicker } from 'antd'\nimport * as moment from 'moment'\nimport React, { useState } from 'react'\nimport JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\n\nconst StyledH3 = styled('div')(() => ({\n    fontSize: '16px',\n    fontWeight: '500',\n    lineHeight: '1.5',\n}))\n\nconst AnalyticsRoot = styled(Card)(({ theme }) => ({\n    [theme.breakpoints.down('lg')]: {\n        width: '90%',\n        height: '80%',\n    },\n    [theme.breakpoints.down('md')]: {\n        width: '95%',\n        height: '80%',\n    },\n    [theme.breakpoints.down('sm')]: {\n        width: '90vw',\n        height: '85vh',\n    },\n    '& .showGraph': {\n        display: 'block',\n    },\n    '& .hideGraph': {\n        display: 'none',\n    },\n}))\n\nconst ChartHeader = styled(Box)(({ theme }) => ({\n    position: 'fixed',\n    display: 'flex',\n    zIndex: 200,\n    backgroundColor: '#FFFFFF',\n    alignItems: 'center',\n    width: 'inherit',\n    padding: '.8rem 1.25rem',\n    justifyContent: 'space-between',\n    borderBottom: `1px solid ${`rgba(${convertHexToRGB(\n        theme.palette.text.disabled\n    )}, 0.2)`}`,\n}))\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n    width: '100px',\n    marginLeft: '10px',\n    backgroundColor: '#d1d1d1',\n    // backgroundColor: '#008255',\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '12px',\n    },\n    '&:hover': {\n        // backgroundColor: '#095435',\n    },\n}))\nconst FlexBox = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n}))\nconst { RangePicker } = DatePicker\n\nconst VesselDataDownload = ({ handleDialogClose, shouldOpenEditorDialog }) => {\n    const [startDate, setStartDate] = useState('2022-01-01')\n    const [endDate, setEndDate] = useState('2022-02-01')\n\n    const [loading, setLoading] = useState(false)\n\n    const disabledDate = (current) => {\n        return (\n            current &&\n            (current < moment.utc([2015, 0, 1]) ||\n                current > moment.utc([2022, 5, 30]))\n        )\n    }\n\n    const generateDateList = (startDate, endDate) => {\n        // Convert the start and end dates to Date objects\n        const start = new Date(startDate)\n        const end = new Date(endDate)\n\n        // Initialize an empty array to store the dates\n        const dates = []\n\n        // Set the current date to the start date\n        let currentDate = start\n\n        // Add the start date to the array\n        dates.push(start.toISOString().split('T')[0])\n\n        // Iterate through all the dates between the start and end dates\n        while (currentDate < end) {\n            // Add one day to the current date\n            currentDate.setDate(currentDate.getDate() + 1)\n            // Add the current date to the array\n            dates.push(currentDate.toISOString().split('T')[0])\n        }\n        // Return the array of dates\n        return dates\n    }\n\n    function generateUrlList(dateList) {\n        return dateList.map((date) => {\n            const [year, month, day] = date.split('-')\n            return `https://storage.googleapis.com/shiplocationdata/${year}/${year}_${month}_${day}.csv`\n        })\n    }\n\n    async function downloadZip() {\n        setLoading(true)\n        let dataList = generateDateList(startDate, endDate)\n        let lst = generateUrlList(dataList)\n\n        const zip = new JSZip()\n\n        for (const url of lst) {\n            const response = await fetch(url)\n            const file = await response.blob()\n            const fileName = url.split('/').pop()\n            zip.folder(`${startDate + '_' + endDate}`).file(fileName, file)\n        }\n        // Generate the zip file\n        const zipFile = await zip.generateAsync({ type: 'blob' })\n        // Save the zip file to the user's device\n        saveAs(zipFile, `${startDate + '_' + endDate}.zip`)\n        setLoading(false)\n    }\n\n    const handleCalendarChange = (dates, dateStrings, info) => {\n        if (\n            dateStrings[1] === '' ||\n            (dateStrings[0] !== startDate && dateStrings[1] === endDate)\n        ) {\n            const futureMonth = moment(dateStrings[0]).add(1, 'M')\n            const next = moment(futureMonth._d)\n\n            setStartDate(dateStrings[0])\n            setEndDate(next.format('YYYY-MM-DD'))\n        } else {\n            setStartDate(dateStrings[0])\n\n            const futureMonth = moment(dateStrings[1])\n            const next = moment(futureMonth._d)\n            setEndDate(next.format('YYYY-MM-DD'))\n            // setEndDate(dateStrings[1])\n        }\n    }\n\n    return (\n        <Backdrop open={shouldOpenEditorDialog}>\n            <AnalyticsRoot\n                sx={{\n                    width: '45%',\n                    height: '30%',\n                    overflow: 'scroll',\n                }}\n            >\n                <ChartHeader>\n                    <StyledH3>Vessel Data Download</StyledH3>\n                    <IconButton onClick={handleDialogClose}>\n                        <Icon sx={{ color: '#878484' }}>close</Icon>\n                    </IconButton>\n                </ChartHeader>\n\n                <Grid\n                    container\n                    spacing={1}\n                    p={4}\n                    pb={0}\n                    mt={7}\n                    mb={2}\n                    sx={{\n                        '& .MuiTextField-root': { width: '100%' },\n                    }}\n                >\n                    <FlexBox>\n                        <Box style={{ marginRight: '10px' }}>Time Range</Box>\n                        <RangePicker\n                            size=\"large\"\n                            // disabled={selectedValue === 'Spec' ? [false, false] : [true, true]}\n                            showTime={{\n                                hideDisabledOptions: true,\n                            }}\n                            defaultValue={[moment(startDate), moment(endDate)]}\n                            value={[moment(startDate), moment(endDate)]}\n                            format={'YYYY-MM-DD'}\n                            onCalendarChange={handleCalendarChange}\n                            disabledDate={disabledDate}\n                            allowClear={false}\n                        />\n                        <StyledButton onClick={downloadZip} disabled>\n                            Download\n                        </StyledButton>\n                    </FlexBox>\n\n                    <Grid\n                        item\n                        lg={12}\n                        md={12}\n                        sm={12}\n                        xs={12}\n                        style={{ color: '#969997' }}\n                    >\n                        Note: Download data can take a while, please be patient\n                    </Grid>\n\n                    {loading && (\n                        <Grid\n                            item\n                            lg={12}\n                            md={12}\n                            sm={12}\n                            xs={12}\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            textAlign=\"center\"\n                            mb=\"20px\"\n                        >\n                            <CircularProgress\n                                size={24}\n                                style={{ color: '#22a6c7', marginTop: '10px' }}\n                            />\n                        </Grid>\n                    )}\n                </Grid>\n            </AnalyticsRoot>\n        </Backdrop>\n    )\n}\n\nexport default VesselDataDownload\n","import { styled, Box } from '@mui/system'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport { topBarHeight } from 'app/utils/constant'\nimport Brand from '../../Brand/Brand'\nimport React, { useState } from 'react'\nimport { Drawer, Button } from '@mui/material'\nimport { H4, Paragraph } from 'app/components/Typography'\nimport { Link } from 'react-router-dom'\nimport VesselDataDownload from './VesselDown'\n\nconst TopbarRoot = styled('div')(() => ({\n    top: 0,\n    zIndex: 96,\n    transition: 'all 0.3s ease',\n    boxShadow: themeShadows[8],\n    height: topBarHeight,\n}))\n\nconst TopbarContainer = styled(Box)(({ theme }) => ({\n    padding: '8px',\n    paddingLeft: 18,\n    paddingRight: 20,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: theme.palette.primary.main,\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    [theme.breakpoints.down('xs')]: {\n        paddingLeft: 14,\n        paddingRight: 16,\n    },\n}))\n\nconst ContentBox = styled('div')(({ theme }) => ({\n    padding: '40px',\n    width: '350px',\n    [theme.breakpoints.down('sm')]: {\n        width: '280px',\n    },\n}))\n\nconst ChunkBox = styled('div')(() => ({\n    marginBottom: '40px',\n}))\n\nconst InfoBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\nconst LabLogo = styled('img')(() => ({\n    width: '50px',\n    marginRight: '10px',\n    marginBottom: '30px',\n}))\n\nconst Options = styled(H4)(({ theme }) => ({\n    margin: '15px',\n    cursor: 'pointer',\n}))\nconst ShipButton = styled(Button)(({ theme }) => ({\n    margin: '15px',\n    cursor: 'pointer',\n    color: '#656566',\n    fontSize: '14px',\n    borderRadius: '40px',\n    height: '44px',\n    border: '1px solid #656566',\n    '&:hover': {\n        background: '#f2f2f2',\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const anchor = 'right'\n    const [state, setState] = useState({\n        right: false,\n    })\n    const [shouldOpenEditorDialog, setShouldOpenEditorDialog] = useState(false)\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (\n            event.type === 'keydown' &&\n            (event.key === 'Tab' || event.key === 'Shift')\n        ) {\n            return\n        }\n\n        setState({ ...state, [anchor]: open })\n    }\n\n    const handleDialogClose = () => {\n        setShouldOpenEditorDialog(false)\n    }\n\n    const handleOpenWindow = () => {\n        setShouldOpenEditorDialog(true)\n    }\n\n    return (\n        <TopbarRoot>\n            <TopbarContainer>\n                <Link to=\"/\">\n                    <Box display=\"flex\">\n                        <Brand />\n                    </Box>\n                </Link>\n                <InfoBox sx={{ p: 1 }}>\n                    {/* <ShipButton onClick={handleOpenWindow}>\n                        Download Ship Data\n                    </ShipButton> */}\n\n                    <Link to=\"/\">\n                        <Options>Map</Options>\n                    </Link>\n                    <Link to=\"/Video\">\n                        <Options>Gallery</Options>\n                    </Link>\n                    <a href=\"https://ocean-noise-explorer.readthedocs.io/en/latest\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Options>Documentation</Options>\n                    </a>\n                    {/* <Options>Videos</Options> */}\n                    <Options onClick={toggleDrawer(anchor, true)}>\n                        About\n                    </Options>\n                </InfoBox>\n\n                <Drawer\n                    anchor={anchor}\n                    open={state[anchor]}\n                    onClose={toggleDrawer(anchor, false)}\n                    p={4}\n                >\n                    <ContentBox>\n                        <LabLogo src={'/assets/images/logos/one.png'} />\n                        <ChunkBox>\n                            <H4 sx={{ mb: 1, fontWeight: 800 }}>Director</H4>\n                            <Paragraph\n                                sx={{\n                                    mt: 0,\n                                    mb: 1,\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                Dr. Shima Abadi\n                            </Paragraph>\n                        </ChunkBox>\n\n                        <ChunkBox>\n                            <H4 sx={{ mb: 1, fontWeight: 800 }}>About</H4>\n\n                            <Paragraph\n                                sx={{\n                                    mt: 0,\n                                    mb: 1,\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                <a\n                                    href=\"https://sites.uw.edu/abadi/\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    Ocean Data Lab&nbsp;\n                                </a>\n                                at the University of Washington have developped\n                                ocean noise explorer (ONE), a web-based\n                                interactive ocean soundscape that will enable\n                                users to visualize and explore a wide variety of\n                                underwater noise metrics and other related data\n                                products. The raw data used in this project is\n                                collected by the Regional Cabled Array and the\n                                Coastal Endurance Array of the&nbsp;\n                                <a\n                                    href=\"https://oceanobservatories.org/\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    Ocean Observatories Initiative (OOI)\n                                </a>\n                                . The raw data is processed by{' '}\n                                <a\n                                    href=\"https://ooipy.readthedocs.io/en/latest/\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    OOIPY\n                                </a>\n                                , a Python library developed by our team, to\n                                calculate different data products that are\n                                required for a comprehensive ocean soundscape\n                                analysis.\n                            </Paragraph>\n                        </ChunkBox>\n\n                        <ChunkBox>\n                            <H4 sx={{ mb: 1, fontWeight: 800 }}>\n                                Acknowledgement\n                            </H4>\n                            <Box>\n                                We thank the Office of Naval Research (ONR) for\n                                funding this research project and the National\n                                Science Foundation (NSF) for funding the OOI\n                                infrastructure.\n                            </Box>\n                        </ChunkBox>\n                    </ContentBox>\n                </Drawer>\n            </TopbarContainer>\n\n            <VesselDataDownload\n                handleDialogClose={handleDialogClose}\n                shouldOpenEditorDialog={shouldOpenEditorDialog}\n                handleOpenWindow={handleOpenWindow}\n            />\n        </TopbarRoot>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","export const topBarHeight = 64\nexport const sideNavWidth = 260\nexport const navbarHeight = 60\nexport const sidenavCompactWidth = 80\nexport const containedLayoutWidth = 1200\n","import { Outlet } from 'react-router-dom'\nimport Layout1Topbar from './Layout1Topbar'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { useEffect, useRef } from 'react'\nimport { styled, Box, useTheme } from '@mui/system'\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\nimport MatxSuspense from 'app/components/MatxSuspense/MatxSuspense'\n\nconst Layout1Root = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    background: theme.palette.background.default,\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n}))\n\nconst LayoutContainer = styled(Box)(({ width }) => ({\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings } = settings\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n    const ref = useRef({ isMdScreen, settings })\n    const layoutClasses = `theme-${theme.palette.type}`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <Layout1Root className={layoutClasses}>\n            <LayoutContainer>\n                <ThemeProvider theme={topbarTheme}>\n                    <Layout1Topbar fixed={true} />\n                </ThemeProvider>\n\n                <ContentBox>\n                    <Box flexGrow={1} position=\"relative\">\n                        <MatxSuspense>\n                            <Outlet />\n                        </MatxSuspense>\n                    </Box>\n                </ContentBox>\n            </LayoutContainer>\n        </Layout1Root>\n    )\n}\n\nexport default React.memo(Layout1)\n","import { differenceInSeconds } from 'date-fns'\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n    // check if it's a rgba\r\n    if (hex.match('rgba'))\r\n    {\r\n        let triplet = hex.slice(5).split(',').slice(0, -1).join(',')\r\n        return triplet\r\n    }\r\n\r\n    let c\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex))\r\n    {\r\n        c = hex.substring(1).split('')\r\n        if (c.length === 3)\r\n        {\r\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]]\r\n        }\r\n        c = '0x' + c.join('')\r\n\r\n        return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',')\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n    var timeout\r\n    return function () {\r\n        var context = this,\r\n            args = arguments\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(function () {\r\n            timeout = null\r\n            if (!immediate) func.apply(context, args)\r\n        }, wait)\r\n        if (immediate && !timeout) func.apply(context, args)\r\n    }\r\n}\r\n\r\nexport function isMobile() {\r\n    if (window)\r\n    {\r\n        return window.matchMedia(`(max-width: 767px)`).matches\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isMdScreen() {\r\n    if (window)\r\n    {\r\n        return window.matchMedia(`(max-width: 1199px)`).matches\r\n    }\r\n    return false\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n    if (!window && !elm)\r\n    {\r\n        return\r\n    }\r\n    if (elm) return elm.scrollTop\r\n    // Firefox, Chrome, Opera, Safari\r\n    if (window.pageYOffset) return window.pageYOffset\r\n    // Internet Explorer 6 - standards mode\r\n    if (document.documentElement && document.documentElement.scrollTop)\r\n        return document.documentElement.scrollTop\r\n    // Internet Explorer 6, 7 and 8\r\n    if (document.body.scrollTop) return document.body.scrollTop\r\n    return 0\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n    var y = elm.offsetTop\r\n    var node = elm\r\n    while (node.offsetParent && node.offsetParent !== document.body)\r\n    {\r\n        node = node.offsetParent\r\n        y += node.offsetTop\r\n    }\r\n    return y\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n    var elm = document.getElementById(elmID)\r\n\r\n    if (!elmID || !elm)\r\n    {\r\n        return\r\n    }\r\n\r\n    var startY = currentYPosition(scrollableElement)\r\n    var stopY = elmYPosition(elm)\r\n\r\n    var distance = stopY > startY ? stopY - startY : startY - stopY\r\n    if (distance < 100)\r\n    {\r\n        scrollTo(0, stopY)\r\n        return\r\n    }\r\n    var speed = Math.round(distance / 50)\r\n    if (speed >= 20) speed = 20\r\n    var step = Math.round(distance / 25)\r\n    var leapY = stopY > startY ? startY + step : startY - step\r\n    var timer = 0\r\n    if (stopY > startY)\r\n    {\r\n        for (var i = startY; i < stopY; i += step)\r\n        {\r\n            setTimeout(\r\n                (function (leapY) {\r\n                    return () => {\r\n                        scrollableElement.scrollTo(0, leapY)\r\n                    }\r\n                })(leapY),\r\n                timer * speed\r\n            )\r\n            leapY += step\r\n            if (leapY > stopY) leapY = stopY\r\n            timer++\r\n        }\r\n        return\r\n    }\r\n    for (let i = startY; i > stopY; i -= step)\r\n    {\r\n        setTimeout(\r\n            (function (leapY) {\r\n                return () => {\r\n                    scrollableElement.scrollTo(0, leapY)\r\n                }\r\n            })(leapY),\r\n            timer * speed\r\n        )\r\n        leapY -= step\r\n        if (leapY < stopY) leapY = stopY\r\n        timer++\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n    let difference = differenceInSeconds(new Date(), date)\r\n\r\n    if (difference < 60) return `${Math.floor(difference)} sec`\r\n    else if (difference < 3600) return `${Math.floor(difference / 60)} min`\r\n    else if (difference < 86400) return `${Math.floor(difference / 3660)} h`\r\n    else if (difference < 86400 * 30)\r\n        return `${Math.floor(difference / 86400)} d`\r\n    else if (difference < 86400 * 30 * 12)\r\n        return `${Math.floor(difference / 86400 / 30)} mon`\r\n    else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`\r\n}\r\n\r\nexport function generateRandomId() {\r\n    let tempId = Math.random().toString()\r\n    let uid = tempId.substr(2, tempId.length - 1)\r\n    return uid\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n    var params = {}\r\n    var search = decodeURIComponent(\r\n        window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n    )\r\n    var definitions = search.split('&')\r\n    definitions.forEach(function (val, key) {\r\n        var parts = val.split('=', 2)\r\n        params[parts[0]] = parts[1]\r\n    })\r\n    return prop && prop in params ? params[prop] : params\r\n}\r\n\r\nexport function classList(classes) {\r\n    return Object.entries(classes)\r\n        .filter((entry) => entry[1])\r\n        .map((entry) => entry[0])\r\n        .join(' ')\r\n}\r\n\r\nexport const flat = (array) => {\r\n    var result = []\r\n    array.forEach(function (a) {\r\n        result.push(a)\r\n        if (Array.isArray(a.children))\r\n        {\r\n            result = result.concat(flat(a.children))\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\nexport const getApiLocation = (location) => {\r\n    return location.replace(' ', '_').toLowerCase()\r\n}\r\n\r\n\r\nexport const handleOutputName = (location, start, end, selectedValue = \"\") => {\r\n    if (selectedValue === \"CTD\")\r\n        return location + '-CTD-' + start + '-' + end\r\n    return location + '-' + start + '-' + end\r\n}\r\n","import clsx from 'clsx'\nimport React from 'react'\nimport { Box, styled } from '@mui/material'\n\nconst StyledBox = styled(Box)(({ theme, textTransformStyle, ellipsis }) => ({\n    textTransform: textTransformStyle || 'none',\n    whiteSpace: ellipsis ? 'nowrap' : 'normal',\n    overflow: ellipsis ? 'hidden' : '',\n    textOverflow: ellipsis ? 'ellipsis' : '',\n    // color: theme.palette.primary.contrastText,\n}))\n\nexport const H1 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({ [className || '']: true })}\n            component=\"h1\"\n            mb={0}\n            mt={0}\n            fontSize=\"28px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const H2 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({ [className || '']: true })}\n            component=\"h2\"\n            mb={0}\n            mt={0}\n            fontSize=\"24px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const H3 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({ [className || '']: true })}\n            component=\"h3\"\n            mb={0}\n            mt={0}\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const H4 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"h4\"\n            mb={0}\n            mt={0}\n            fontSize=\"16px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const H5 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"h5\"\n            mb={0}\n            mt={0}\n            fontSize=\"14px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const H6 = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"h6\"\n            mb={0}\n            mt={0}\n            fontSize=\"13px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const Paragraph = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"p\"\n            mb={0}\n            mt={0}\n            fontSize=\"14px\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const Small = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"small\"\n            fontSize=\"12px\"\n            fontWeight=\"500\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const Span = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"span\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n\nexport const Tiny = ({\n    children,\n    className,\n    ellipsis,\n    textTransform,\n    ...props\n}) => {\n    return (\n        <StyledBox\n            textTransformStyle={textTransform}\n            ellipsis={ellipsis}\n            className={clsx({\n                [className || '']: true,\n            })}\n            component=\"small\"\n            fontSize=\"10px\"\n            lineHeight=\"1.5\"\n            {...props}\n        >\n            {children}\n        </StyledBox>\n    )\n}\n"],"sourceRoot":""}