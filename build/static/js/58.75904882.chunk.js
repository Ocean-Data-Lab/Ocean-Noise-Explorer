(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[58,10,15],{1385:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var i=n(5),a=n(14),r=n(155),o=n(142),l=n(143),s=n(164),u=n(163),c=n(144),f=n(145),d=n(154),_=n.n(d),v=n(148),m=n(156),h=n(162),p=n(175),g=n(151),b=(n(152),n(147),n(150),n(149)),y=n(182),x=n(861),T=n(264),O=n(862),S=n(359),E=n(241),C=n(412),A=n(424),I=n(262),R=n(354),D=n(16),P=n(159),L=n(146),M=n(648),w=n(863),N=[0,0],F=function(e){Object(c.a)(n,e);var t=Object(f.a)(n);function n(){var e;return Object(o.a)(this,n),(e=t.apply(this,arguments))._tileStrategy=null,e._fetchQueue=null,e.layer=null,e}return Object(l.a)(n,[{key:"resampling",get:function(){return!("resampling"in this.layer)||!1!==this.layer.resampling}},{key:"update",value:function(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}},{key:"attach",value:function(){var e=this,t="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new S.a(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new C.a({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:function(t,n){return e.fetchTile(t,n)}}),this._tileStrategy=new A.a({cachePolicy:"keep",resampling:this.resampling,acquireTile:function(t){return e.acquireTile(t)},releaseTile:function(t){return e.releaseTile(t)},tileInfoView:this._tileInfoView}),this.requestUpdate(),this.handles.add(Object(p.e)((function(){return e.resampling}),(function(){e.doRefresh()}))),Object(s.a)(Object(u.a)(n.prototype),"attach",this).call(this)}},{key:"detach",value:function(){Object(s.a)(Object(u.a)(n.prototype),"detach",this).call(this),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}},{key:"moveStart",value:function(){this.requestUpdate()}},{key:"viewChange",value:function(){this.requestUpdate()}},{key:"moveEnd",value:function(){this.requestUpdate()}},{key:"supportsSpatialReference",value:function(e){var t;return Object(y.d)(null===(t=this.layer.tileInfo)||void 0===t?void 0:t.spatialReference,e)}},{key:"createFetchPopupFeaturesQueryGeometry",value:function(e,t){return Object(w.a)(e,t,this.view)}},{key:"doRefresh",value:function(){var e=Object(r.a)(_.a.mark((function e(){var t=this;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((function(e){return t._enqueueTileFetch(e)})));case 1:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"isUpdating",value:function(){var e,t;return null!==(e=null===(t=this._fetchQueue)||void 0===t?void 0:t.updating)&&void 0!==e&&e}},{key:"acquireTile",value:function(e){var t,n,i,r,o=this._bitmapView.createTile(e),l=o.bitmap;return t=this._tileInfoView.getTileCoords(N,o.key),n=Object(a.a)(t,2),l.x=n[0],l.y=n[1],l.resolution=this._tileInfoView.getTileResolution(o.key),i=this._tileInfoView.tileInfo.size,r=Object(a.a)(i,2),l.width=r[0],l.height=r[1],this._enqueueTileFetch(o),this._bitmapView.addChild(o),this.requestUpdate(),o}},{key:"releaseTile",value:function(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(function(){return e.destroy()})),this.requestUpdate()}},{key:"fetchTile",value:function(){var e=Object(r.a)(_.a.mark((function e(t){var n,a,r,o,l,s,u,c,f,d,v=arguments;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=v.length>1&&void 0!==v[1]?v[1]:{},a="tilemapCache"in this.layer?this.layer.tilemapCache:null,r=n.signal,o=n.resamplingLevel,l=void 0===o?0:o,a){e.next=22;break}return e.prev=3,e.next=6,this._fetchImage(t,r);case 6:return e.abrupt("return",e.sent);case 9:if(e.prev=9,e.t0=e.catch(3),Object(h.j)(e.t0)||this.resampling){e.next=13;break}return e.abrupt("return",Object(O.a)(this._tileInfoView.tileInfo.size));case 13:if(!(l<3)){e.next=21;break}if(!(s=this._tileInfoView.getTileParentId(t.id))){e.next=21;break}return u=new E.a(s),e.next=19,this.fetchTile(u,Object(i.a)(Object(i.a)({},n),{},{resamplingLevel:l+1}));case 19:return c=e.sent,e.abrupt("return",Object(O.b)(this._tileInfoView,c,u,t));case 21:throw e.t0;case 22:return f=new E.a(0,0,0,0),e.prev=23,e.next=26,a.fetchAvailabilityUpsample(t.level,t.row,t.col,f,{signal:r});case 26:if(f.level===t.level||this.resampling){e.next=28;break}return e.abrupt("return",Object(O.a)(this._tileInfoView.tileInfo.size));case 28:return e.next=30,this._fetchImage(f,r);case 30:d=e.sent,e.next=40;break;case 33:if(e.prev=33,e.t1=e.catch(23),!Object(h.j)(e.t1)){e.next=37;break}throw e.t1;case 37:return e.next=39,this._fetchImage(t,r);case 39:d=e.sent;case 40:return e.abrupt("return",this.resampling?Object(O.b)(this._tileInfoView,d,f,t):d);case 41:case"end":return e.stop()}}),e,this,[[3,9],[23,33]])})));return function(t){return e.apply(this,arguments)}}()},{key:"_enqueueTileFetch",value:function(){var e=Object(r.a)(_.a.mark((function e(t){var n,i=this;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._fetchQueue.has(t.key.id)){e.next=12;break}return e.prev=1,e.next=4,this._fetchQueue.push(t.key);case 4:n=e.sent,t.bitmap.source=n,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(function(){return i.requestUpdate()})),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),Object(h.j)(e.t0)||m.a.getLogger(this.declaredClass).error(e.t0);case 11:this.requestUpdate();case 12:case"end":return e.stop()}}),e,this,[[1,8]])})));return function(t){return e.apply(this,arguments)}}()},{key:"_fetchImage",value:function(){var e=Object(r.a)(_.a.mark((function e(t,n){return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.layer.fetchTile(t.level,t.row,t.col,{signal:n}));case 1:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()}]),n}(function(e){var t=function(e){Object(c.a)(n,e);var t=Object(f.a)(n);function n(){return Object(o.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"fetchPopupFeatures",value:function(){var e=Object(r.a)(_.a.mark((function e(t,n){var i,a,o,l=this;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=this.layer,t){e.next=3;break}throw new P.a("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i});case 3:if("tile"===i.type){e.next=5;break}throw new P.a("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:i.type});case 5:return a=this.get("view.scale"),o=i.allSublayers.toArray().filter((function(e){var t=0===e.minScale||a<=e.minScale,n=0===e.maxScale||a>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&t&&n})),e.abrupt("return",Object(h.g)(o.map(function(){var e=Object(r.a)(_.a.mark((function e(i){var a,r,o;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=i.createQuery(),r=Object(L.k)(n)?n.event:null,o=Object(M.a)({renderer:i.renderer,event:r}),a.geometry=l.createFetchPopupFeaturesQueryGeometry(t,o),e.next=4,i.popupTemplate.getRequiredFields();case 4:return a.outFields=e.sent,e.next=7,i.queryFeatures(a);case 7:return e.abrupt("return",e.sent.features);case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}())).then((function(e){var t;return(t=[]).concat.apply(t,Object(D.a)(e.map((function(e){return e.value})).filter(Boolean)))})));case 7:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()}]),n}(e);return Object(v.a)([Object(g.b)()],t.prototype,"layer",void 0),t=Object(v.a)([Object(b.a)("esri.layers.mixins.TileLayerView")],t)}(Object(R.a)(Object(x.a)(Object(T.a)(I.a)))));Object(v.a)([Object(g.b)()],F.prototype,"_fetchQueue",void 0),Object(v.a)([Object(g.b)()],F.prototype,"resampling",null);var j=F=Object(v.a)([Object(b.a)("esri.views.2d.layers.TileLayerView2D")],F)},169:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(60),a=n(142),r=n(143),o=function(){function e(){Object(a.a)(this,e),this.name=this.constructor.name||"UnnamedBrush"}return Object(r.a)(e,[{key:"prepareState",value:function(e,t,n){}},{key:"draw",value:function(e,t,n){}},{key:"drawMany",value:function(e,t,n){var a,r=Object(i.a)(t);try{for(r.s();!(a=r.n()).done;){var o=a.value;this.draw(e,o,n)}}catch(l){r.e(l)}finally{r.f()}}}]),e}()},172:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var i=n(155),a=n(142),r=n(143),o=n(154),l=n.n(o),s=n(152),u=n(156),c=n(146),f=n(329),d=n(226),_=n(187),v=n(153),m=u.a.getLogger("esri.views.webgl.BufferObject");function h(e){return Object(s.g)(e)}var p=function(){function e(t,n,i,r){Object(a.a)(this,e),this._context=t,this.bufferType=n,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(v.t.BufferObject,this),this._glName=this._context.gl.createBuffer(),Object(d.a)(this._context.gl),r&&this.setData(r)}return Object(r.a)(e,[{key:"glName",get:function(){return this._glName}},{key:"size",get:function(){return this._size}},{key:"indexType",get:function(){return this._indexType}},{key:"byteSize",get:function(){return this.bufferType===v.d.ELEMENT_ARRAY_BUFFER?this._indexType===v.k.UNSIGNED_INT?4*this._size:2*this._size:this._size}},{key:"_isVAOAware",get:function(){return this.bufferType===v.d.ELEMENT_ARRAY_BUFFER||this.bufferType===v.d.ARRAY_BUFFER}},{key:"dispose",value:function(){var e;null!==(e=this._context)&&void 0!==e&&e.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(v.t.BufferObject,this),this._context=null):this._glName&&m.warn("Leaked WebGL buffer object")}},{key:"setSize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(e<=0&&m.error("Buffer size needs to be positive!"),this.bufferType===v.d.ELEMENT_ARRAY_BUFFER&&Object(c.k)(t))switch(this._indexType=t,t){case v.k.UNSIGNED_SHORT:e*=2;break;case v.k.UNSIGNED_INT:e*=4}this._setBufferData(e)}},{key:"setData",value:function(e){if(e){var t=e.byteLength;this.bufferType===v.d.ELEMENT_ARRAY_BUFFER&&(Object(f.i)(e)&&(t/=2,this._indexType=v.k.UNSIGNED_SHORT),Object(f.j)(e)&&(t/=4,this._indexType=v.k.UNSIGNED_INT)),this._setBufferData(t,e)}}},{key:"_setBufferData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._size=e;var n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);var i=this._context.gl;Object(c.k)(t)?i.bufferData(this.bufferType,t,this.usage):i.bufferData(this.bufferType,e,this.usage),Object(d.a)(i),this._isVAOAware&&this._context.bindVAO(n)}},{key:"setSubData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.byteLength;if(e){(t<0||t>=this._size)&&m.error("offset is out of range!");var a=t,r=n,o=i,l=e.byteLength;this.bufferType===v.d.ELEMENT_ARRAY_BUFFER&&(Object(f.i)(e)?(l/=2,a*=2,r*=2,o*=2):Object(f.j)(e)&&(l/=4,a*=4,r*=4,o*=4)),void 0===i&&(i=l-1),n>=i&&m.error("end must be bigger than start!"),t+n-i>this._size&&m.error("An attempt to write beyond the end of the buffer!");var s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);var u=this._context.gl,c=ArrayBuffer.isView(e)?e.buffer:e,_=0===r&&o===e.byteLength?c:c.slice(r,o);u.bufferSubData(this.bufferType,a,_),Object(d.a)(u),this._isVAOAware&&this._context.bindVAO(s)}}},{key:"setSubDataFromView",value:function(e,t,n,i){if(e){(t<0||t>=this._size)&&m.error("offset is out of range!"),n>=i&&m.error("end must be bigger than start!"),t+n-i>this._size&&m.error("An attempt to write beyond the end of the buffer!");var a=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);var r=this._context.gl;if(this._context.type===_.a.WEBGL2)r.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,n,i-n);else{var o=0===n&&i===e.length?e:e.subarray(n,i);r.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,o)}Object(d.a)(r),this._isVAOAware&&this._context.bindVAO(a)}}},{key:"getSubData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0;if(this._context.type===_.a.WEBGL2)if(n<0||i<0)m.error("Problem getting subdata: offset and length were less than zero!");else{var a=h(e)?e.BYTES_PER_ELEMENT:1;if(a*((null!==n&&void 0!==n?n:0)+(null!==i&&void 0!==i?i:0))>e.byteLength)m.error("Problem getting subdata: offset and length exceeded destination size!");else{t+a*(null!==i&&void 0!==i?i:0)>this.byteSize&&m.warn("Potential problem getting subdata: requested data exceeds buffer size!");var r=this._context.gl;this._context.bindBuffer(this,v.d.COPY_READ_BUFFER),r.getBufferSubData(v.d.COPY_READ_BUFFER,t,e,n,i),this._context.unbindBuffer(v.d.COPY_READ_BUFFER)}}else m.error("Get buffer subdata is supported in WebGL2 only!")}},{key:"getSubDataAsync",value:function(){var e=Object(i.a)(l.a.mark((function e(t){var n,i,a,r=arguments;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.length>1&&void 0!==r[1]?r[1]:0,i=r.length>2?r[2]:void 0,a=r.length>3?r[3]:void 0,this._context.type!==_.a.WEBGL2){e.next=9;break}return e.next=6,this._context.clientWaitAsync();case 6:this.getSubData(t,n,i,a),e.next=10;break;case 9:m.error("Get buffer subdata is supported in WebGL2 only!");case 10:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()}],[{key:"createIndex",value:function(t,n,i){return new e(t,v.d.ELEMENT_ARRAY_BUFFER,n,i)}},{key:"createVertex",value:function(t,n,i){return new e(t,v.d.ARRAY_BUFFER,n,i)}},{key:"createUniform",value:function(t,n,i){if(t.type!==_.a.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new e(t,v.d.UNIFORM_BUFFER,n,i)}},{key:"createPixelPack",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:v.D.STREAM_READ,i=arguments.length>2?arguments[2]:void 0;if(t.type!==_.a.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");var a=new e(t,v.d.PIXEL_PACK_BUFFER,n);return i&&a.setSize(i),a}},{key:"createPixelUnpack",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:v.D.STREAM_DRAW,i=arguments.length>2?arguments[2]:void 0;if(t.type!==_.a.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new e(t,v.d.PIXEL_UNPACK_BUFFER,n,i)}}]),e}()},174:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(142),a=n(143),r=n(156),o=n(146),l=n(153),s=n(228),u=r.a.getLogger("esri.views.webgl.VertexArrayObject"),c=function(){function e(t,n,a,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;Object(i.a)(this,e),this._context=t,this._locations=n,this._layout=a,this._buffers=r,this._indexBuffer=o,this._glName=null,this._initialized=!1,t.instanceCounter.increment(l.t.VertexArrayObject,this)}return Object(a.a)(e,[{key:"glName",get:function(){return this._glName}},{key:"context",get:function(){return this._context}},{key:"vertexBuffers",get:function(){return this._buffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"size",get:function(){var e=this;return Object.keys(this._buffers).reduce((function(t,n){return t+e._buffers[n].size}),Object(o.k)(this._indexBuffer)?this._indexBuffer.size:0)}},{key:"layout",get:function(){return this._layout}},{key:"locations",get:function(){return this._locations}},{key:"dispose",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._context){if(this._glName){var t,n,i=null===(t=this._context)||void 0===t||null===(n=t.capabilities)||void 0===n?void 0:n.vao;i?(i.deleteVertexArray(this._glName),this._glName=null):u.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),e){for(var a in this._buffers)this._buffers[a].dispose(),delete this._buffers[a];this._indexBuffer=Object(o.e)(this._indexBuffer)}this._context.instanceCounter.decrement(l.t.VertexArrayObject,this),this._context=null}else(this._glName||e&&Object.getOwnPropertyNames(this._buffers).length>0)&&u.warn("Leaked WebGL VAO")}},{key:"initialize",value:function(){if(!this._initialized){var e=this._context.capabilities.vao;if(e){var t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t}this._initialized=!0}}},{key:"bind",value:function(){this.initialize();var e=this._context.capabilities.vao;e?e.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}},{key:"_bindLayout",value:function(){var e=this._buffers,t=this._layout,n=this._indexBuffer;e||u.error("Vertex buffer dictionary is empty!");var i=this._context.gl;for(var a in e){var r=e[a];r||u.error("Vertex buffer is uninitialized!");var l=t[a];l||u.error("Vertex element descriptor is empty!"),Object(s.a)(this._context,this._locations,r,l)}Object(o.k)(n)&&(this._context.capabilities.vao?i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,n.glName):this._context.bindBuffer(n))}},{key:"unbind",value:function(){this.initialize();var e=this._context.capabilities.vao;e?e.bindVertexArray(null):this._unbindLayout()}},{key:"_unbindLayout",value:function(){var e=this._buffers,t=this._layout;for(var n in e||u.error("Vertex buffer dictionary is empty!"),e){var i=e[n];i||u.error("Vertex buffer is uninitialized!");var a=t[n];Object(s.e)(this._context,this._locations,i,a)}Object(o.k)(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}]),e}()},193:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return h})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return r})),n.d(t,"f",(function(){return l})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return f})),n.d(t,"i",(function(){return c})),n.d(t,"j",(function(){return a}));var i,a,r,o,l,s,u,c,f,d,_=n(143),v=n(142),m=n(170);(d=i||(i={}))[d.BACKGROUND=0]="BACKGROUND",d[d.FILL=1]="FILL",d[d.LINE=2]="LINE",d[d.SYMBOL=3]="SYMBOL",d[d.CIRCLE=4]="CIRCLE",function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(a||(a={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(r||(r={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(o||(o={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(l||(l={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(s||(s={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(u||(u={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(c||(c={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(f||(f={}));var h=Object(_.a)((function e(){Object(v.a)(this,e)}));h.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},h.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},h.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:m.e.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:m.p.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},h.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:r.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:s.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:s.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:l.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:u.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[f.HORIZONTAL]}},h.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},h.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},h.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}},h.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP},"line-width":{type:"number",minimum:0,default:1}},h.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}},h.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},h.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}}},198:function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var i=n(155),a=n(14),r=n(16),o=n(5),l=n(142),s=n(143),u=n(154),c=n.n(u),f=n(156),d=n(146),_=n(172),v=n(226),m=n(187),h=n(153),p=n(227),g=n(179),b=n(228),y=f.a.getLogger("esri.views.webgl.FrameBufferObject"),x=function(){function e(t,n){var i,a,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(Object(l.a)(this,e),this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc=Object(o.a)({},n),t.instanceCounter.increment(h.t.FramebufferObject,this),Object(d.k)(r)){Array.isArray(r)||(r=[r]);for(var u=0;u<r.length;++u){var c=r[u],f=h.g.COLOR_ATTACHMENT0+u,_=void 0;S(c)?(T(c)?(_=c.descriptor,this._colorAttachments.set(f,c)):(_=c,this._colorAttachments.set(f,new g.a(this._context,_))),C(_,this._desc)):(O(c)?(_=c.descriptor,this._colorAttachments.set(f,c)):(_=c,this._colorAttachments.set(f,new p.a(this._context,_))),A(_,this._desc)),this._validateColorAttachmentPoint(f)}}if(Object(d.k)(s))if(S(s))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),T(s)?(a=s.descriptor,this._depthStencilTexture=s):(a=s,this._depthStencilTexture=new g.a(this._context,a)),C(a,this._desc);else{var v;O(s)?(a=s.descriptor,i=s):(a=s,i=new p.a(this._context,a));var m=null!==(v=this._desc.depthStencilTarget)&&void 0!==v?v:h.m.DEPTH_STENCIL_RENDER_BUFFER;m===h.m.STENCIL_RENDER_BUFFER?this._stencilAttachment=i:m===h.m.DEPTH_RENDER_BUFFER||m===h.m.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=i:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),A(a,this._desc)}}return Object(s.a)(e,[{key:"dispose",value:function(){if(this._desc){var e=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(h.t.FramebufferObject,this),this._desc=null}}},{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._desc}},{key:"colorTexture",get:function(){var e=this._colorAttachments.get(h.g.COLOR_ATTACHMENT0);return e&&T(e)?e:null}},{key:"colorAttachment",get:function(){return this._colorAttachments.get(h.g.COLOR_ATTACHMENT0)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._desc.width}},{key:"height",get:function(){return this._desc.height}},{key:"gpuMemoryUsage",get:function(){return Object(r.a)(this._colorAttachments).reduce((function(e,t){var n=Object(a.a)(t,2),i=(n[0],n[1]);return e+Object(b.d)(i)}),0)+Object(b.d)(this.depthStencilAttachment)}},{key:"getColorTexture",value:function(e){var t=this._colorAttachments.get(e);return t&&T(t)?t:null}},{key:"attachColorTexture",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.g.COLOR_ATTACHMENT0;e&&(this._validateColorAttachmentPoint(t),C(e.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e))}},{key:"detachColorTexture",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h.g.COLOR_ATTACHMENT0,t=this._colorAttachments.get(e);if(T(t)){var n=t;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)),this._colorAttachments.delete(e),n}}},{key:"setColorTextureTarget",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.g.COLOR_ATTACHMENT0,n=this._colorAttachments.get(t);T(n)&&this._framebufferTexture2D(n.glName,t,e)}},{key:"attachDepthStencilTexture",value:function(e){if(!Object(d.j)(e)){var t=e.descriptor;t.pixelFormat!==h.p.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==h.q.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),C(t,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==h.m.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=h.m.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,h.l)),this._depthStencilTexture=e}}},{key:"detachDepthStencilTexture",value:function(){var e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,h.l)),this._depthStencilTexture=null,e}},{key:"attachDepthStencilBuffer",value:function(e){if(!Object(d.j)(e)){var t=e.descriptor;if(t.internalFormat!==h.s.DEPTH_STENCIL&&t.internalFormat!==h.s.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),A(t,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=t.internalFormat===h.s.DEPTH_STENCIL?h.m.DEPTH_STENCIL_RENDER_BUFFER:h.m.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);var n=this._context.gl,i=this._desc.depthStencilTarget===h.m.DEPTH_RENDER_BUFFER?n.DEPTH_ATTACHMENT:n.DEPTH_STENCIL_ATTACHMENT;n.framebufferRenderbuffer(h.o.FRAMEBUFFER,i,n.RENDERBUFFER,e.glName)}this._depthAttachment=e}}},{key:"detachDepthStencilBuffer",value:function(){var e=this._context.gl,t=this._depthAttachment;if(t&&this._initialized){this._context.bindFramebuffer(this);var n=this._desc.depthStencilTarget===h.m.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(h.o.FRAMEBUFFER,n,e.RENDERBUFFER,null)}return this._depthAttachment=null,t}},{key:"detachAll",value:function(){var e=this;this._colorAttachments.forEach((function(t,n){return e._detachColorAttachment(n)})),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}},{key:"copyToTexture",value:function(e,t,n,i,a,r,o){(e<0||t<0||a<0||r<0)&&console.error("Offsets cannot be negative!"),(n<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");var l=this._desc,s=o.descriptor;o.descriptor.target!==h.A.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(e+n>l.width||t+i>l.height||a+n>s.width||r+i>s.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");var u=this._context,c=u.bindTexture(o,g.a.TEXTURE_UNIT_FOR_UPDATES);u.setActiveTexture(g.a.TEXTURE_UNIT_FOR_UPDATES),u.bindFramebuffer(this),u.gl.copyTexSubImage2D(h.A.TEXTURE_2D,0,a,r,e,t,n,i),u.bindTexture(c,g.a.TEXTURE_UNIT_FOR_UPDATES)}},{key:"readPixels",value:function(e,t,n,i,a,r,o){(n<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,n,i,a,r,o)}},{key:"readPixelsAsync",value:function(){var e=Object(i.a)(c.a.mark((function e(t,n,i,a,r,o,l){var s,u;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._context.type===m.a.WEBGL2){e.next=2;break}return e.abrupt("return",(Object(v.b)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,n,i,a,r,o,l)));case 2:return s=this._context.gl,u=_.a.createPixelPack(this._context,h.D.STREAM_READ,l.byteLength),this._context.bindBuffer(u),this._context.bindFramebuffer(this),s.readPixels(t,n,i,a,r,o,0),this._context.unbindBuffer(h.d.PIXEL_PACK_BUFFER),e.next=9,u.getSubDataAsync(l);case 9:u.dispose();case 10:case"end":return e.stop()}}),e,this)})));return function(t,n,i,a,r,o,l){return e.apply(this,arguments)}}()},{key:"resize",value:function(e,t){var n=this._desc;if(n.width!==e||n.height!==t){if(!this._initialized)return n.width=e,n.height=t,this._colorAttachments.forEach((function(n){n&&n.resize(e,t)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(e,t));n.width=e,n.height=t,this._colorAttachments.forEach((function(n){n&&n.resize(e,t)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(e,t):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(e,t),this._stencilAttachment&&this._stencilAttachment.resize(e,t)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}},{key:"initializeAndBind",value:function(){var e,t,n,i,a=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h.o.FRAMEBUFFER,o=this._context.gl;if(this._initialized)o.bindFramebuffer(r,this.glName);else{this._glName&&o.deleteFramebuffer(this._glName);var l=this._context,s=o.createFramebuffer(),u=this._desc,c=null!==(e=u.colorTarget)&&void 0!==e?e:h.y.RENDER_BUFFER,f=null!==(t=u.width)&&void 0!==t?t:1,d=null!==(n=u.height)&&void 0!==n?n:1;if(o.bindFramebuffer(r,s),0===this._colorAttachments.size)if(c===h.y.TEXTURE||c===h.y.CUBEMAP)this._colorAttachments.set(h.g.COLOR_ATTACHMENT0,E(l,u,this.descriptor.colorTarget===h.y.CUBEMAP?h.A.TEXTURE_CUBE_MAP:h.A.TEXTURE_2D));else{var _=new p.a(l,{internalFormat:h.v.RGBA4,width:f,height:d});this._colorAttachments.set(h.g.COLOR_ATTACHMENT0,_)}this._colorAttachments.forEach((function(e,t){e&&(T(e)?a._framebufferTexture2D(e.glName,t,I(e),r):o.framebufferRenderbuffer(r,t,o.RENDERBUFFER,e.glName))}));var m=null!==(i=u.depthStencilTarget)&&void 0!==i?i:h.m.NONE;switch(m){case h.m.DEPTH_RENDER_BUFFER:case h.m.DEPTH_STENCIL_RENDER_BUFFER:this._depthAttachment||(this._depthAttachment=new p.a(l,{internalFormat:u.depthStencilTarget===h.m.DEPTH_RENDER_BUFFER?h.s.DEPTH_COMPONENT16:h.s.DEPTH_STENCIL,width:f,height:d}));var b=m===h.m.DEPTH_RENDER_BUFFER?o.DEPTH_ATTACHMENT:o.DEPTH_STENCIL_ATTACHMENT;o.framebufferRenderbuffer(r,b,o.RENDERBUFFER,this._depthAttachment.glName);break;case h.m.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new p.a(l,{internalFormat:h.s.STENCIL_INDEX8,width:f,height:d})),o.framebufferRenderbuffer(r,o.STENCIL_ATTACHMENT,o.RENDERBUFFER,this._stencilAttachment.glName);break;case h.m.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){l.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");var y={target:h.A.TEXTURE_2D,pixelFormat:h.p.DEPTH_STENCIL,dataType:h.q.UNSIGNED_INT_24_8,samplingMode:h.z.NEAREST,wrapMode:h.B.CLAMP_TO_EDGE,width:f,height:d};this._depthStencilTexture=new g.a(l,y)}this._framebufferTexture2D(this._depthStencilTexture.glName,o.DEPTH_STENCIL_ATTACHMENT,I(this._depthStencilTexture),r)}Object(v.c)()&&o.checkFramebufferStatus(r)!==o.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=s,this._initialized=!0}}},{key:"_framebufferTexture2D",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.g.COLOR_ATTACHMENT0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h.A.TEXTURE_2D,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:h.o.FRAMEBUFFER,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this._context.gl.framebufferTexture2D(i,t,n,e,a)}},{key:"_detachColorAttachment",value:function(e){Object(v.b)()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");var t=this._context.gl,n=this._colorAttachments.get(e);return T(n)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)):this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(h.o.FRAMEBUFFER,e,t.RENDERBUFFER,null)),this._colorAttachments.delete(e),n}},{key:"_disposeColorAttachments",value:function(){var e=this;this._colorAttachments.forEach((function(t,n){e._detachColorAttachment(n),t.dispose()})),this._colorAttachments.clear()}},{key:"_disposeDepthStencilAttachments",value:function(){var e=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);var t=this._desc.depthStencilTarget===h.m.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(h.o.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(h.o.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}},{key:"_validateColorAttachmentPoint",value:function(t){if(-1===e._MAX_COLOR_ATTACHMENTS){var n=this._context.capabilities.drawBuffers;if(n){var i=this._context.gl;e._MAX_COLOR_ATTACHMENTS=i.getParameter(n.MAX_COLOR_ATTACHMENTS)}else e._MAX_COLOR_ATTACHMENTS=1}var a=t-h.g.COLOR_ATTACHMENT0;a+1>e._MAX_COLOR_ATTACHMENTS&&y.error("esri.FrameBufferObject","illegal attachment point for color attachment: ".concat(a+1,". Implementation supports up to ").concat(e._MAX_COLOR_ATTACHMENTS," color attachments"))}}]),e}();function T(e){return"type"in e&&"texture"===e.type}function O(e){return"type"in e&&"renderbuffer"===e.type}function S(e){return T(e)||"pixelFormat"in e}function E(e,t,n){return new g.a(e,{target:n,pixelFormat:h.p.RGBA,dataType:h.q.UNSIGNED_BYTE,samplingMode:h.z.NEAREST,wrapMode:h.B.CLAMP_TO_EDGE,width:t.width,height:t.height})}function C(e,t){e.target!==h.A.TEXTURE_2D&&e.target!==h.A.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Color attachment texture must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}function A(e,t){void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}function I(e){return e.descriptor.target===h.A.TEXTURE_CUBE_MAP?h.A.TEXTURE_CUBE_MAP_POSITIVE_X:h.A.TEXTURE_2D}x._MAX_COLOR_ATTACHMENTS=-1},201:function(e,t,n){"use strict";function i(){return new Float32Array(4)}function a(e,t,n,i){var a=new Float32Array(4);return a[0]=e,a[1]=t,a[2]=n,a[3]=i,a}function r(){return i()}function o(){return a(1,1,1,1)}function l(){return a(1,0,0,0)}function s(){return a(0,1,0,0)}function u(){return a(0,0,1,0)}function c(){return a(0,0,0,1)}n.d(t,"a",(function(){return a}));var f=r(),d=o(),_=l(),v=s(),m=u(),h=c();Object.freeze(Object.defineProperty({__proto__:null,create:i,clone:function(e){var t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},fromValues:a,createView:function(e,t){return new Float32Array(e,t,4)},zeros:r,ones:o,unitX:l,unitY:s,unitZ:u,unitW:c,ZEROS:f,ONES:d,UNIT_X:_,UNIT_Y:v,UNIT_Z:m,UNIT_W:h},Symbol.toStringTag,{value:"Module"}))},205:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var i=n(142),a=n(143),r=n(172),o=n(153),l=n(174),s=n(213),u=function(){function e(t,n){Object(i.a)(this,e),this.rctx=t,this._vertexBuffer=r.a.createVertex(t,o.D.STATIC_DRAW,new Uint16Array(n)),this._vao=new l.a(t,new Map([["a_position",0]]),{geometry:[new s.a("a_position",2,o.k.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}return Object(a.a)(e,[{key:"bind",value:function(){this.rctx.bindVAO(this._vao)}},{key:"unbind",value:function(){this.rctx.bindVAO(null)}},{key:"dispose",value:function(){this._vao.dispose(!1),this._vertexBuffer.dispose()}},{key:"draw",value:function(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(o.r.TRIANGLE_STRIP,0,this._count)}}]),e}()},207:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(265);function a(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new i.a(e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},211:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(225),a={shaders:{vertexShader:Object(i.a)("background/background.vert"),fragmentShader:Object(i.a)("background/background.frag")},attributes:new Map([["a_pos",0]])}},219:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return u})),n.d(t,"d",(function(){return l}));Number.POSITIVE_INFINITY;var i=Math.PI,a=128/i,r=1/Math.LN2;function o(e,t){return(e%=t)>=0?e:e+t}function l(e){return o(e*a,256)}function s(e){return o(.7111111111111111*e,256)}function u(e){return Math.log(e)*r}function c(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},225:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},heatmap:{heatmapResolve:{"heatmapResolve.frag":"precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}","heatmapResolve.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nvarying vec2 v_uv;\nconst float UV_TO_TILE_SPACE = 512.;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos * UV_TO_TILE_SPACE, 1.)).xy, 1., 1.);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp sampler2D u_attributeData4;\nuniform highp sampler2D u_attributeData5;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nhighp vec4 getAttributeData4(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData4, coords);\n}\nhighp vec4 getAttributeData5(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData5, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","barycentric.glsl":"float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif"},icon:{"common.glsl":"#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif",heatmapAccumulate:{"common.glsl":"varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;","heatmapAccumulate.frag":"precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}","heatmapAccumulate.vert":"precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\nconst float TILE_TO_CLIP_SPACE = 2.0 / 512.0;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = vec3(a_pos * POSITION_PRECISION * TILE_TO_CLIP_SPACE - 1.0, 1.0);\nvec3 vertexPos = centerPos + vec3(v_offsetFromCenter, 0.0) * u_radius * TILE_TO_CLIP_SPACE;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},"hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},pie:{"pie.frag":"precision mediump float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\nuniform lowp vec4 u_defaultColor;\nuniform lowp vec4 u_othersColor;\nuniform lowp vec4 u_outlineColor;\nuniform float u_donutRatio;\nuniform float u_sectorThreshold;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\n#if __VERSION__ == 300\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn u_colors[colorIndex];\n#else\nmediump int colorIndex;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == index) {\ncolorIndex = int(filteredSectorToColorId[i].y);\n}\n}\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == colorIndex) {\nreturn u_colors[i];\n}\n}\nreturn u_colors[NUMBER_OF_FIELDS - 1];\n#endif\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = u_outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","pie.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\nuniform float u_outlineWidth;\nuniform mediump float u_sectorThreshold;\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nint filter(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\nif (sectorAngle > u_sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\n#if __VERSION__ == 300\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\nif (i == filteredInfo.colorId) {\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\n}\n}\n#endif\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[NUMBER_OF_FIELDS]) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/hittest/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat outlineSize = u_outlineWidth;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(size.x, size.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData0 = getAttributeData3(a_id);\nattributeData[0] = filterNaNValues(attributeData0.x);\nattributeData[1] = filterNaNValues(attributeData0.y);\nattributeData[2] = filterNaNValues(attributeData0.z);\nattributeData[3] = filterNaNValues(attributeData0.w);\n#if (NUMBER_OF_FIELDS > 4)\nvec4 attributeData1 = getAttributeData4(a_id);\nattributeData[4] = filterNaNValues(attributeData1.x);\nattributeData[5] = filterNaNValues(attributeData1.y);\nattributeData[6] = filterNaNValues(attributeData1.z);\nattributeData[7] = filterNaNValues(attributeData1.w);\n#endif\n#if (NUMBER_OF_FIELDS > 8)\nvec4 attributeData2 = getAttributeData5(a_id);\nattributeData[8] = filterNaNValues(attributeData2.x);\nattributeData[9] = filterNaNValues(attributeData2.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[NUMBER_OF_FIELDS];\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\n#if __VERSION__ == 300\nv_filteredSectorToColorId = filteredSectorToColorId;\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == numOfEntries) {\nbreak;\n}\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\n}\n#endif\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},shared:{line:{"common.glsl":"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},"symbologyTypeUtils.glsl":"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif",text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef SUPPORTS_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},overlay:{overlay:{"overlay.frag":"precision lowp float;\nuniform lowp sampler2D u_texture;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_texture, v_uv);\ngl_FragColor = color *  u_opacity;\n}","overlay.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nuniform highp mat3 u_dvsMat3;\nvarying mediump vec2 v_uv;\nvoid main(void) {\nv_uv = a_uv;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\ngl_Position = vec4(pos.xy, 0.0, 1.0);\n}"}},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"getFadeOpacity.glsl":"uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}","getFragmentColor.glsl":"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}",imagery:{"imagery.frag":"precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}","imagery.vert":"attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},particles:{"particles.frag":"precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}","particles.vert":"attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}"},streamlines:{"streamlines.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}","streamlines.vert":"attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}"},"vv.glsl":"#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"atan2.glsl":"float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}","encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};var a=new(n(271).a)((function(e){var t=i;return e.split("/").forEach((function(e){t&&(t=t[e])})),t}));function r(e){return a.resolveIncludes(e)}},227:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n(142),a=n(143),r=n(187),o=n(153),l=function(){function e(t,n){Object(i.a)(this,e),this._context=t,this._desc=n,this.type="renderbuffer",this._context.instanceCounter.increment(o.t.Renderbuffer,this);var a=this._context.gl;this.glName=a.createRenderbuffer(),this._context.bindRenderbuffer(this);var l=n.width,s=n.height,u=n.internalFormat;if(n.multisampled){if(this._context.type!==r.a.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");a.renderbufferStorageMultisample(a.RENDERBUFFER,this.samples,u,l,s)}else a.renderbufferStorage(a.RENDERBUFFER,u,l,s)}return Object(a.a)(e,[{key:"descriptor",get:function(){return this._desc}},{key:"samples",get:function(){var e=this._desc.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}},{key:"resize",value:function(e,t){var n=this._desc;if(n.width!==e||n.height!==t){n.width=e,n.height=t;var i=this._context.gl;this._context.bindRenderbuffer(this),n.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,n.internalFormat,n.width,n.height):i.renderbufferStorage(i.RENDERBUFFER,n.internalFormat,n.width,n.height)}}},{key:"dispose",value:function(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(o.t.Renderbuffer,this),this._context=null)}}]),e}()},228:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return f})),n.d(t,"e",(function(){return u})),n.d(t,"f",(function(){return l}));var i=n(60),a=(n(147),n(146)),r=n(153);function o(e){var t=e.gl;switch(t.getError()){case t.NO_ERROR:return null;case t.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case t.INVALID_VALUE:return"A numeric argument is out of range";case t.INVALID_OPERATION:return"The specified command is not allowed for the current state";case t.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case t.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case t.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function l(e,t){return e.vertexBuffers[t].size/function(e){return e[0].stride}(e.layout[t])}function s(e,t,n,a){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=e.gl,l=e.capabilities.instancing;e.bindBuffer(n);var s,u=Object(i.a)(a);try{for(u.s();!(s=u.n()).done;){var c=s.value,f=t.get(c.name);void 0===f&&console.error("There is no location for vertex attribute '".concat(c.name,"' defined."));var d=r*c.stride;if(c.count<=4)o.vertexAttribPointer(f,c.count,c.type,c.normalized,c.stride,c.offset+d),o.enableVertexAttribArray(f),c.divisor>0&&l&&l.vertexAttribDivisor(f,c.divisor);else if(9===c.count)for(var _=0;_<3;_++)o.vertexAttribPointer(f+_,3,c.type,c.normalized,c.stride,c.offset+12*_+d),o.enableVertexAttribArray(f+_),c.divisor>0&&l&&l.vertexAttribDivisor(f+_,c.divisor);else if(16===c.count)for(var v=0;v<4;v++)o.vertexAttribPointer(f+v,4,c.type,c.normalized,c.stride,c.offset+16*v+d),o.enableVertexAttribArray(f+v),c.divisor>0&&l&&l.vertexAttribDivisor(f+v,c.divisor);else console.error("Unsupported vertex attribute element count: "+c.count)}}catch(m){u.e(m)}finally{u.f()}}function u(e,t,n,a){var o=e.gl,l=e.capabilities.instancing;e.bindBuffer(n);var s,u=Object(i.a)(a);try{for(u.s();!(s=u.n()).done;){var c=s.value,f=t.get(c.name);if(c.count<=4)o.disableVertexAttribArray(f),c.divisor&&c.divisor>0&&l&&l.vertexAttribDivisor(f,0);else if(9===c.count)for(var d=0;d<3;d++)o.disableVertexAttribArray(f+d),c.divisor&&c.divisor>0&&l&&l.vertexAttribDivisor(f+d,0);else if(16===c.count)for(var _=0;_<4;_++)o.disableVertexAttribArray(f+_),c.divisor&&c.divisor>0&&l&&l.vertexAttribDivisor(f+_,0);else console.error("Unsupported vertex attribute element count: "+c.count)}}catch(v){u.e(v)}finally{u.f()}e.unbindBuffer(r.d.ARRAY_BUFFER)}function c(e){switch(e){case r.p.ALPHA:case r.p.LUMINANCE:case r.p.RED:case r.p.RED_INTEGER:case r.v.R8:case r.v.R8I:case r.v.R8UI:case r.v.R8_SNORM:case r.s.STENCIL_INDEX8:return 1;case r.p.LUMINANCE_ALPHA:case r.p.RG:case r.p.RG_INTEGER:case r.v.RGBA4:case r.v.R16F:case r.v.R16I:case r.v.R16UI:case r.v.RG8:case r.v.RG8I:case r.v.RG8UI:case r.v.RG8_SNORM:case r.v.RGB565:case r.v.RGB5_A1:case r.s.DEPTH_COMPONENT16:return 2;case r.p.DEPTH_COMPONENT:case r.p.RGB:case r.p.RGB_INTEGER:case r.v.RGB8:case r.v.RGB8I:case r.v.RGB8UI:case r.v.RGB8_SNORM:case r.v.SRGB8:case r.s.DEPTH_COMPONENT24:return 3;case r.p.DEPTH_STENCIL:case r.p.RGBA:case r.p.RGBA_INTEGER:case r.v.RGBA8:case r.v.R32F:case r.v.R11F_G11F_B10F:case r.v.RG16F:case r.v.R32I:case r.v.R32UI:case r.v.RG16I:case r.v.RG16UI:case r.v.RGBA8I:case r.v.RGBA8UI:case r.v.RGBA8_SNORM:case r.v.SRGB8_ALPHA8:case r.v.RGB9_E5:case r.v.RGB10_A2UI:case r.v.RGB10_A2:case r.s.DEPTH_STENCIL:case r.s.DEPTH_COMPONENT32F:case r.s.DEPTH24_STENCIL8:return 4;case r.s.DEPTH32F_STENCIL8:return 5;case r.v.RGB16F:case r.v.RGB16I:case r.v.RGB16UI:return 6;case r.v.RG32F:case r.v.RG32I:case r.v.RG32UI:case r.v.RGBA16F:case r.v.RGBA16I:case r.v.RGBA16UI:return 8;case r.v.RGB32F:case r.v.RGB32I:case r.v.RGB32UI:return 12;case r.v.RGBA32F:case r.v.RGBA32I:case r.v.RGBA32UI:return 16;case r.i.COMPRESSED_RGB_S3TC_DXT1_EXT:case r.i.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case r.i.COMPRESSED_RGBA_S3TC_DXT3_EXT:case r.i.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case r.i.COMPRESSED_R11_EAC:case r.i.COMPRESSED_SIGNED_R11_EAC:case r.i.COMPRESSED_RGB8_ETC2:case r.i.COMPRESSED_SRGB8_ETC2:case r.i.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case r.i.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case r.i.COMPRESSED_RG11_EAC:case r.i.COMPRESSED_SIGNED_RG11_EAC:case r.i.COMPRESSED_RGBA8_ETC2_EAC:case r.i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function f(e){if(Object(a.j)(e))return 0;if("descriptor"in e)return e.glName?f(e.descriptor):0;var t=e.internalFormat||"pixelFormat"in e&&e.pixelFormat;if(!t)return 0;var n="hasMipmap"in e&&e.hasMipmap?1.3:1,i=e.width*e.height;return c(t)*i*n}},229:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return o}));var i=n(153),a=n(213),r={geometry:[new a.a("a_pos",2,i.k.BYTE,0,2)]},o={geometry:[new a.a("a_pos",2,i.k.BYTE,0,4),new a.a("a_tex",2,i.k.BYTE,2,4)]},l={geometry:[new a.a("a_pos",2,i.k.UNSIGNED_SHORT,0,4)]}},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return u})),n.d(t,"d",(function(){return _})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return f})),n.d(t,"g",(function(){return m})),n.d(t,"h",(function(){return v})),n.d(t,"i",(function(){return h})),n.d(t,"j",(function(){return g})),n.d(t,"k",(function(){return p}));var i=n(14),a=n(236),r=n(187),o=n(153),l=(n(198),n(179));function s(e,t){var n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=!(a&&"u8"===t.pixelType),u=s?o.q.FLOAT:o.q.UNSIGNED_BYTE,c=null==t.pixels||0===t.pixels.length?null:s?t.getAsRGBAFloat():t.getAsRGBA(),f=null===(n=e.capabilities.textureFloat)||void 0===n?void 0:n.textureFloatLinear,d={width:t.width,height:t.height,target:o.A.TEXTURE_2D,pixelFormat:o.p.RGBA,internalFormat:e.type===r.a.WEBGL2&&s?o.v.RGBA32F:o.p.RGBA,samplingMode:!f||"bilinear"!==i&&"cubic"!==i?o.z.NEAREST:o.z.LINEAR,dataType:u,wrapMode:o.B.CLAMP_TO_EDGE,flipped:!1};return new l.a(e,d,c)}function u(e,t){var n=t.spacing,a=t.offsets,s=t.coefficients,u=Object(i.a)(t.size,2),c=u[0],f=u[1],d=n[0]>1,_={width:d?4*c:c,height:f,target:o.A.TEXTURE_2D,pixelFormat:o.p.RGBA,internalFormat:e.type===r.a.WEBGL2?o.v.RGBA32F:o.p.RGBA,dataType:o.q.FLOAT,samplingMode:o.z.NEAREST,wrapMode:o.B.CLAMP_TO_EDGE,flipped:!1},v=new Float32Array(d?c*f*16:2*a.length);if(d)for(var m=0,h=0;m<s.length;m++)v[h++]=s[m],m%3==2&&(v[h++]=1);else for(var p=0;p<f;p++)for(var g=0;g<c;g++){var b=4*(p*c+g),y=2*(g*f+p);v[b]=a[y],v[b+1]=a[y+1],v[b+3]=-1===a[y]?0:1}return new l.a(e,_,v)}function c(e,t){var n={width:t.length/4,height:1,target:o.A.TEXTURE_2D,pixelFormat:o.p.RGBA,internalFormat:o.p.RGBA,dataType:o.q.UNSIGNED_BYTE,samplingMode:o.z.NEAREST,wrapMode:o.B.CLAMP_TO_EDGE,flipped:!1};return new l.a(e,n,t)}function f(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];return{u_flipY:r,u_applyTransform:!!e,u_opacity:i,u_transformSpacing:e?e.spacing:a.a,u_transformGridSize:e?e.size:a.a,u_targetImageSize:t,u_srcImageSize:n}}function d(e,t){return{u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:0}}function _(e,t){return{u_scale:e,u_offset:t}}function v(e){return{u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function m(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function h(e,t){for(var n,i=e.gl,a=t.glName,r=i.getProgramParameter(a,i.ACTIVE_UNIFORMS),o=new Map,l=0;l<r;l++)(n=i.getActiveUniform(a,l))&&o.set(n.name,{location:i.getUniformLocation(a,n.name),info:n});return o}function p(e,t,n){Object.keys(n).forEach((function(i){var a=t.get(i)||t.get(i+"[0]");a&&function(e,t,n,i){if(null===i||null==n)return!1;var a=i.info;switch(a.type){case o.C.FLOAT:a.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case o.C.FLOAT_VEC2:e.setUniform2fv(t,n);break;case o.C.FLOAT_VEC3:e.setUniform3fv(t,n);break;case o.C.FLOAT_VEC4:e.setUniform4fv(t,n);break;case o.C.FLOAT_MAT3:e.setUniformMatrix3fv(t,n);break;case o.C.FLOAT_MAT4:e.setUniformMatrix4fv(t,n);break;case o.C.INT:a.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case o.C.BOOL:e.setUniform1i(t,n?1:0);break;case o.C.INT_VEC2:case o.C.BOOL_VEC2:e.setUniform2iv(t,n);break;case o.C.INT_VEC3:case o.C.BOOL_VEC3:e.setUniform3iv(t,n);break;case o.C.INT_VEC4:case o.C.BOOL_VEC4:e.setUniform4iv(t,n);break;default:return!1}}(e,i,n[i],a)}))}function g(e,t,n,i){n.length===i.length&&(i.some((function(e){return null==e}))||n.some((function(e){return null==e}))||n.forEach((function(n,a){t.setUniform1i(n,a),e.bindTexture(i[a],a)})))}},242:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i,a,r,o={exports:{}};i=o,a=function(){function e(e,n,a){a=a||2;var r,o,l,u,c,f,d,_=n&&n.length,v=_?n[0]*a:e.length,m=t(e,0,v,a,!0),h=[];if(!m||m.next===m.prev)return h;if(_&&(m=s(e,n,m,a)),e.length>80*a){r=l=e[0],o=u=e[1];for(var p=a;p<v;p+=a)(c=e[p])<r&&(r=c),(f=e[p+1])<o&&(o=f),c>l&&(l=c),f>u&&(u=f);d=0!==(d=Math.max(l-r,u-o))?1/d:0}return i(m,h,a,r,o,d),h}function t(e,t,n,i,a){var r,o;if(a===I(e,t,n,i)>0)for(r=t;r<n;r+=i)o=E(r,e[r],e[r+1],o);else for(r=n-i;r>=t;r-=i)o=E(r,e[r],e[r+1],o);if(o&&b(o,o.next)){var l=o.next;C(o),o=l}return o}function n(e,t){if(!e)return e;t||(t=e);var n,i=e;do{if(n=!1,i.steiner||!b(i,i.next)&&0!==g(i.prev,i,i.next))i=i.next;else{var a=i.prev;if(C(i),(i=t=a)===i.next)break;n=!0}}while(n||i!==t);return t}function i(e,t,s,u,c,f,d){if(e){!d&&f&&_(e,u,c,f);for(var v,m,h=e;e.prev!==e.next;)if(v=e.prev,m=e.next,f?r(e,u,c,f):a(e))t.push(v.i/s),t.push(e.i/s),t.push(m.i/s),C(e),e=m.next,h=m.next;else if((e=m)===h){d?1===d?i(e=o(n(e),t,s),t,s,u,c,f,2):2===d&&l(e,t,s,u,c,f):i(n(e),t,s,u,c,f,1);break}}}function a(e){var t=e.prev,n=e,i=e.next;if(g(t,n,i)>=0)return!1;for(var a=e.next.next;a!==e.prev;){if(h(t.x,t.y,n.x,n.y,i.x,i.y,a.x,a.y)&&g(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function r(e,t,n,i){var a=e.prev,r=e,o=e.next;if(g(a,r,o)>=0)return!1;for(var l=a.x<r.x?a.x<o.x?a.x:o.x:r.x<o.x?r.x:o.x,s=a.y<r.y?a.y<o.y?a.y:o.y:r.y<o.y?r.y:o.y,u=a.x>r.x?a.x>o.x?a.x:o.x:r.x>o.x?r.x:o.x,c=a.y>r.y?a.y>o.y?a.y:o.y:r.y>o.y?r.y:o.y,f=v(l,s,t,n,i),d=v(u,c,t,n,i),_=e.prevZ,m=e.nextZ;_&&_.z>=f&&m&&m.z<=d;){if(_!==e.prev&&_!==e.next&&h(a.x,a.y,r.x,r.y,o.x,o.y,_.x,_.y)&&g(_.prev,_,_.next)>=0)return!1;if(_=_.prevZ,m!==e.prev&&m!==e.next&&h(a.x,a.y,r.x,r.y,o.x,o.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;_&&_.z>=f;){if(_!==e.prev&&_!==e.next&&h(a.x,a.y,r.x,r.y,o.x,o.y,_.x,_.y)&&g(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&h(a.x,a.y,r.x,r.y,o.x,o.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function o(e,t,i){var a=e;do{var r=a.prev,o=a.next.next;!b(r,o)&&y(r,a,a.next,o)&&O(r,o)&&O(o,r)&&(t.push(r.i/i),t.push(a.i/i),t.push(o.i/i),C(a),C(a.next),a=e=o),a=a.next}while(a!==e);return n(a)}function l(e,t,a,r,o,l){var s=e;do{for(var u=s.next.next;u!==s.prev;){if(s.i!==u.i&&p(s,u)){var c=S(s,u);return s=n(s,s.next),c=n(c,c.next),i(s,t,a,r,o,l),void i(c,t,a,r,o,l)}u=u.next}s=s.next}while(s!==e)}function s(e,i,a,r){var o,l,s,c=[];for(o=0,l=i.length;o<l;o++)(s=t(e,i[o]*r,o<l-1?i[o+1]*r:e.length,r,!1))===s.next&&(s.steiner=!0),c.push(m(s));for(c.sort(u),o=0;o<c.length;o++)a=n(a=f(c[o],a),a.next);return a}function u(e,t){return e.x-t.x}function c(e){if(e.next.prev===e)return e;for(var t=e;;){var n=t.next;if(n.prev===t||n===t||n===e)break;t=n}return t}function f(e,t){var i=function(e,t){var n,i=t,a=e.x,r=e.y,o=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){var l=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(l<=a&&l>o){if(o=l,l===a){if(r===i.y)return i;if(r===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!n)return null;if(a===o)return n;var s,u=n,c=n.x,f=n.y,_=1/0;i=n;do{a>=i.x&&i.x>=c&&a!==i.x&&h(r<f?a:o,r,c,f,r<f?o:a,r,i.x,i.y)&&(s=Math.abs(r-i.y)/(a-i.x),O(i,e)&&(s<_||s===_&&(i.x>n.x||i.x===n.x&&d(n,i)))&&(n=i,_=s)),i=i.next}while(i!==u);return n}(e,t);if(!i)return t;var a=S(i,e),r=n(i,i.next),o=c(a);return n(o,o.next),r=c(r),c(t===i?r:t)}function d(e,t){return g(e.prev,e,t.prev)<0&&g(t.next,e,e.next)<0}function _(e,t,n,i){var a=e;do{null===a.z&&(a.z=v(a.x,a.y,t,n,i)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==e);a.prevZ.nextZ=null,a.prevZ=null,function(e){var t,n,i,a,r,o,l,s,u=1;do{for(n=e,e=null,r=null,o=0;n;){for(o++,i=n,l=0,t=0;t<u&&(l++,i=i.nextZ);t++);for(s=u;l>0||s>0&&i;)0!==l&&(0===s||!i||n.z<=i.z)?(a=n,n=n.nextZ,l--):(a=i,i=i.nextZ,s--),r?r.nextZ=a:e=a,a.prevZ=r,r=a;n=i}r.nextZ=null,u*=2}while(o>1)}(a)}function v(e,t,n,i,a){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*a)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*a)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function m(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function h(e,t,n,i,a,r,o,l){return(a-o)*(t-l)-(e-o)*(r-l)>=0&&(e-o)*(i-l)-(n-o)*(t-l)>=0&&(n-o)*(r-l)-(a-o)*(i-l)>=0}function p(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&y(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(O(e,t)&&O(t,e)&&function(e,t){var n=e,i=!1,a=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&a<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(g(e.prev,e,t.prev)||g(e,t.prev,t))||b(e,t)&&g(e.prev,e,e.next)>0&&g(t.prev,t,t.next)>0)}function g(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function b(e,t){return e.x===t.x&&e.y===t.y}function y(e,t,n,i){var a=T(g(e,t,n)),r=T(g(e,t,i)),o=T(g(n,i,e)),l=T(g(n,i,t));return a!==r&&o!==l||!(0!==a||!x(e,n,t))||!(0!==r||!x(e,i,t))||!(0!==o||!x(n,e,i))||!(0!==l||!x(n,t,i))}function x(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function T(e){return e>0?1:e<0?-1:0}function O(e,t){return g(e.prev,e,e.next)<0?g(e,t,e.next)>=0&&g(e,e.prev,t)>=0:g(e,t,e.prev)<0||g(e,e.next,t)<0}function S(e,t){var n=new A(e.i,e.x,e.y),i=new A(t.i,t.x,t.y),a=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=a,a.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function E(e,t,n,i){var a=new A(e,t,n);return i?(a.next=i.next,a.prev=i,i.next.prev=a,i.next=a):(a.prev=a,a.next=a),a}function C(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function A(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function I(e,t,n,i){for(var a=0,r=t,o=n-i;r<n;r+=i)a+=(e[o]-e[r])*(e[r+1]+e[o+1]),o=r;return a}return e.deviation=function(e,t,n,i){var a=t&&t.length,r=a?t[0]*n:e.length,o=Math.abs(I(e,0,r,n));if(a)for(var l=0,s=t.length;l<s;l++){var u=t[l]*n,c=l<s-1?t[l+1]*n:e.length;o-=Math.abs(I(e,u,c,n))}var f=0;for(l=0;l<i.length;l+=3){var d=i[l]*n,_=i[l+1]*n,v=i[l+2]*n;f+=Math.abs((e[d]-e[v])*(e[_+1]-e[d+1])-(e[d]-e[_])*(e[v+1]-e[d+1]))}return 0===o&&0===f?0:Math.abs((f-o)/o)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},i=0,a=0;a<e.length;a++){for(var r=0;r<e[a].length;r++)for(var o=0;o<t;o++)n.vertices.push(e[a][r][o]);a>0&&(i+=e[a-1].length,n.holes.push(i))}return n},e},void 0!==(r=a())&&(i.exports=r);var l=o.exports},243:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(146),s=n(201),u=n(229),c=n(169),f=n(211),d=n(172),_=n(153),v=n(207),m=n(174),h=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._color=Object(s.a)(1,0,0,1),e._initialized=!1,e}return Object(a.a)(n,[{key:"dispose",value:function(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}},{key:"prepareState",value:function(e,t){var n=e.context;n.setDepthWriteEnabled(!1),n.setDepthTestEnabled(!1),n.setStencilTestEnabled(!0),n.setBlendingEnabled(!1),n.setColorMask(!1,!1,!1,!1),n.setStencilOp(_.w.KEEP,_.w.KEEP,_.w.REPLACE),n.setStencilWriteMask(255),n.setStencilFunctionSeparate(_.n.FRONT_AND_BACK,_.h.GREATER,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n=e.context,i=e.requestRender;this._initialized||this._initialize(n),!Object(l.k)(i)||this._solidProgram.isCompiled?(n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(_.r.TRIANGLE_STRIP,0,4),n.bindVAO()):i()}},{key:"_initialize",value:function(e){if(this._initialized)return!0;var t=Object(v.a)(e,f.a);if(!t)return!1;var n=new Int8Array([0,0,1,0,0,1,1,1]),i=d.a.createVertex(e,_.D.STATIC_DRAW,n),a=new m.a(e,f.a.attributes,u.a,{geometry:i});return this._solidProgram=t,this._solidVertexArrayObject=a,this._initialized=!0,!0}}]),n}(c.a)},244:function(e,t,n){"use strict";n.d(t,"a",(function(){return me}));var i=n(274),a=n(5),r=n(142),o=n(143),l=n(144),s=n(145),u=n(146),c=n(281),f=n(205),d=n(169),_=n(153),v=n(231),m=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},e._rendererUniformInfos=new Map,e}return Object(o.a)(n,[{key:"dispose",value:function(){this._quad&&this._quad.dispose()}},{key:"prepareState",value:function(e,t){var n=e.context;n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA,_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(_.h.EQUAL,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n;if(Object(c.b)(t)&&!t.suspended){var i=e.timeline,a=e.context,r=e.painter,o=e.requestRender;i.begin(this.name);var l=!(null!==(n=a.capabilities.textureFloat)&&void 0!==n&&n.textureFloatLinear);t.updateTexture(e);var s=this._getShaderVariations(t,l),u=r.materialManager.getProgram(this._desc[t.symbolizerParameters.type],s);this._drawWithProgram(a,u,t,o),i.end(this.name)}}},{key:"_drawWithProgram",value:function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[0,0],l=arguments.length>6&&void 0!==arguments[6]&&arguments[6];if(this._quad||(this._quad=new f.a(e,[0,0,1,0,0,1,1,1])),!Object(u.k)(i)||t.isCompiled){var s=n.symbolizerParameters,c=n.transformGrid,d=n.width,_=n.height,m=n.opacity,h=s.type;e.useProgram(t);var p=this._getShaderVariations(n),g=this._getUniformInfos(h,e,t,p),b=n.getTextures(),y=b.names,x=b.textures;Object(v.j)(e,t,y,x);var T=Object(v.d)(r,o),O=Object(v.f)(c,[d,_],[n.source.width,n.source.height],m,l);if(Object(v.k)(t,g,Object(a.a)(Object(a.a)({u_coordScale:n.coordScale,u_dvsMat3:n.transforms.dvs},T),O)),s.colormap){var S=s.colormap,E=s.colormapOffset,C=Object(v.e)(S,E);Object(v.k)(t,g,C)}if("stretch"===s.type){var A=Object(v.h)(s);Object(v.k)(t,g,A)}else if("hillshade"===s.type){var I=Object(v.g)(s);Object(v.k)(t,g,I)}this._quad.draw()}else i()}},{key:"_getUniformInfos",value:function(e,t,n,i){var a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);var r=Object(v.i)(t,n);return this._rendererUniformInfos.set(a,r),r}},{key:"_getShaderVariations",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=[],i=e.interpolation,a=e.symbolizerParameters,r=a.type,o=a.colormap;return"cubic"===i?n.push("bicubic"):"bilinear"===i&&"stretch"===r&&null!=o?(n.push("bilinear"),n.push("nnedge")):t&&"bilinear"===i&&n.push("bilinear"),e.isRendereredSource?n.push("noop"):o&&n.push("applyColormap"),e.transformGrid&&(n.push("applyProjection"),1===e.transformGrid.spacing[0]&&n.push("lookupProjection")),n}}]),n}(d.a),h=n(275),p=n(158),g={nearest:{defines:[],samplingMode:_.z.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:_.z.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:_.z.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:_.z.LINEAR_MIPMAP_LINEAR,mips:!0}},b=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_pos",0]])},e}return Object(o.a)(n,[{key:"dispose",value:function(){this._quad&&this._quad.dispose()}},{key:"prepareState",value:function(e,t){var n=e.context;n.setBlendingEnabled(!0),"additive"===t.blendFunction?n.setBlendFunctionSeparate(_.b.ONE,_.b.ONE,_.b.ONE,_.b.ONE):n.setBlendFunctionSeparate(_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA,_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(_.h.EQUAL,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n=e.context,i=e.renderingOptions,a=e.painter,r=e.requestRender;if(t.source){var o=function(e,t,n){if("dynamic"===n.samplingMode){var i=e.state,a=t.resolution/t.pixelRatio/i.resolution,r=Math.round(e.pixelRatio)!==e.pixelRatio,o=a>1.05||a<.95;return i.rotation||o||r||t.isSourceScaled||t.rotation?g.bilinear:g.nearest}return g[n.samplingMode]}(e,t,i),l=a.materialManager.getProgram(this._desc,o.defines);if(!Object(u.k)(r)||l.isCompiled){e.timeline.begin(this.name),this._quad||(this._quad=new f.a(n,[0,0,1,0,0,1,1,1]));var s=t.coordScale,c=t.computedOpacity,d=t.transforms;t.setSamplingProfile(o),t.bind(e.context,p.L),n.useProgram(l),l.setUniformMatrix3fv("u_dvsMat3",d.dvs),l.setUniform1i("u_texture",p.L),l.setUniform2fv("u_coordScale",s),l.setUniform1f("u_opacity",c),this._quad.draw(),e.timeline.end(this.name)}else r()}}}]),n}(d.a),y=n(201),x=n(165),T=n(211),O=n(207),S=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._color=Object(y.a)(0,1,0,1),e}return Object(o.a)(n,[{key:"dispose",value:function(){this._program&&this._program.dispose()}},{key:"prepareState",value:function(e){var t=e.context;t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(_.w.KEEP,_.w.KEEP,_.w.REPLACE),t.setStencilWriteMask(255),t.setStencilFunction(_.h.ALWAYS,0,255)}},{key:"draw",value:function(e,t){var n=e.context,i=e.state,a=e.requestRender,r=Object(x.g)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT}]}),o=t.getVAO(n,i,r.attributes,r.bufferLayouts);Object(u.j)(o.indexBuffer)||(this._program||(this._program=Object(O.a)(n,T.a)),!Object(u.k)(a)||this._program.isCompiled?(n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",i.displayMat3),n.bindVAO(o),n.drawElements(_.r.TRIANGLES,o.indexBuffer.size,_.k.UNSIGNED_INT,0),n.bindVAO()):a())}}]),n}(d.a),E=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._desc={vsPath:"overlay/overlay",fsPath:"overlay/overlay",attributes:new Map([["a_pos",0],["a_uv",1]])},e}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setBlendFunctionSeparate(_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA,_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(_.h.GREATER,255,255)}},{key:"draw",value:function(e,t){var n=e.context,i=e.painter,a=e.requestRender;if(t.isReady){var r=t.computedOpacity,o=t.dvsMat3,l=t.isWrapAround,s=t.texture;e.timeline.begin(this.name);var c=i.materialManager.getProgram(this._desc);if(!Object(u.k)(a)||c.isCompiled){var f=Object(x.g)("overlay",{geometry:[{location:0,name:"a_pos",count:2,type:_.k.FLOAT}],tex:[{location:1,name:"a_uv",count:2,type:_.k.UNSIGNED_SHORT}]}),d=t.getVAO(n,f.bufferLayouts,f.attributes);if(d){n.bindVAO(d),n.useProgram(c),n.bindTexture(s,p.L),c.setUniformMatrix3fv("u_dvsMat3",o),c.setUniform1i("u_texture",p.L),c.setUniform1f("u_opacity",r);var v=l?10:4;n.drawArrays(_.r.TRIANGLE_STRIP,0,v),n.bindVAO(),e.timeline.end(this.name)}}else a()}}}]),n}(d.a),C=n(164),A=n(163),I=n(247),R=n(157),D=n(60),P=n(16),L=n(166),M=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._computeDesc=new Map,e}return Object(o.a)(n,[{key:"prepareState",value:function(e,t,n){var i=e.context;n&&n.includes("hittest")?i.setBlendFunctionSeparate(_.b.ONE,_.b.ONE,_.b.ONE,_.b.ONE):i.setBlendFunctionSeparate(_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA,_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA),i.setBlendingEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!0),i.setStencilFunction(_.h.EQUAL,t.stencilRef,255)}},{key:"draw",value:function(e,t,n){var i=this,a=this.getGeometryType();t.commit(e);var r=t.getGeometry(a);Object(u.j)(r)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),r.forEachCommand((function(a){var r=L.e.load(a.materialKey).symbologyType;i.supportsSymbology(r)&&i.drawGeometry(e,t,a,n)})))}},{key:"_setSharedUniforms",value:function(e,t,n){var i=t.displayLevel,a=t.pixelRatio,r=t.state,o=t.passOptions;Object(u.k)(o)&&"hittest"===o.type&&(e.setUniform2fv("u_hittestPos",o.position),e.setUniform1f("u_hittestDist",o.distance)),e.setUniform1f("u_pixelRatio",a),e.setUniformMatrix3fv("u_tileMat3",n.transforms.tileMat3),e.setUniformMatrix3fv("u_viewMat3",r.viewMat3),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",r.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(i*p.z)),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",p.F),e.setUniform1i("u_attributeData1",p.G),e.setUniform1i("u_attributeData2",p.H),e.setUniform1i("u_attributeData3",p.I),e.setUniform1i("u_attributeData4",p.J),e.setUniform1i("u_attributeData5",p.K)}},{key:"_setSizeVVUniforms",value:function(e,t,n,i){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",n.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",n.vvSizeScaleStopsValue),e.vvSizeFieldStops){var a=n.getSizeVVFieldStops(i.key.level);t.setUniform1fv("u_vvSizeFieldStopsValues",a.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",a.sizes)}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",n.vvSizeUnitValueToPixelsRatio)}},{key:"_setColorAndOpacityVVUniforms",value:function(e,t,n){e.vvColor&&(t.setUniform1fv("u_vvColorValues",n.vvColorValues),t.setUniform4fv("u_vvColors",n.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",n.vvOpacityValues),t.setUniform1fv("u_vvOpacities",n.vvOpacities))}},{key:"_setRotationVVUniforms",value:function(e,t,n){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===n.vvMaterialParameters.vvRotationType?0:1)}},{key:"_getTriangleDesc",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["a_pos"],i=t.bufferLayouts.geometry,r=n.map((function(e){return i.findIndex((function(t){return t.name===e}))})),o="".concat(e,"-").concat(r.join("-")),l=this._computeDesc.get(o);if(!l){var s,u=t.strides,c=t.strides.geometry,f=new Map(t.attributes),d=i.map((function(e){return Object(a.a)({},e)})),_=Math.max.apply(Math,Object(P.a)(t.attributes.values())),v={geometry:d},m=0,h=Object(D.a)(r);try{for(h.s();!(s=h.n()).done;){var p=s.value,g=i[p];v.geometry.push({count:g.count,name:g.name+"1",divisor:g.divisor,normalized:g.normalized,offset:c+g.offset,stride:c,type:g.type}),v.geometry.push({count:g.count,name:g.name+"2",divisor:g.divisor,normalized:g.normalized,offset:2*c+g.offset,stride:c,type:g.type}),f.set(g.name+"1",_+ ++m),f.set(g.name+"2",_+ ++m)}}catch(b){h.e(b)}finally{h.f()}l={bufferLayouts:v,attributes:f,strides:u},this._computeDesc.set(o,l)}return l}}]),n}(d.a),w=n(191);var N=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return R.d.FILL}},{key:"supportsSymbology",value:function(e){return e!==R.e.DOT_DENSITY}},{key:"drawGeometry",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.rendererInfo,l=e.requiredLevel,s=e.passOptions,c=e.requestRender,f=L.a.load(n.materialKey),d=Object(w.b)(f.data),v=Object(u.k)(s)&&"hittest"===s.type,m=r.materialManager,h=Object(u.r)(d.programSpec,function(e){var t={geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT},{location:1,name:"a_id",count:3,type:_.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:_.k.UNSIGNED_BYTE},{location:3,name:"a_color",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_aux1",count:4,type:_.k.UNSIGNED_SHORT},{location:5,name:"a_aux2",count:4,type:_.k.SHORT},{location:6,name:"a_aux3",count:4,type:_.k.UNSIGNED_BYTE},{location:7,name:"a_zoomRange",count:2,type:_.k.UNSIGNED_SHORT}]};switch(e.symbologyType){case R.e.SIMPLE:case R.e.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:"materials/fill",vertexLayout:t}}(f)),p=h.shader,g=h.vertexLayout,b=h.hittestAttributes,y=_.r.TRIANGLES,T=Object(x.g)(f.data,g);v&&(T=this._getTriangleDesc(n.materialKey,T,b),y=_.r.POINTS);var O=T,S=O.attributes,E=O.bufferLayouts,C=m.getMaterialProgram(e,f,p,S,i);if(!Object(u.k)(c)||v||C.isCompiled){if(a.useProgram(C),this._setSharedUniforms(C,e,t),C.setUniform2f("u_tileOffset",512*t.key.col,512*t.key.row),f.textureBinding){r.textureManager.bindTextures(a,C,f);var A=1/Math.pow(2,l-t.key.level);C.setUniform1f("u_zoomFactor",A)}var I=1/e.pixelRatio;C.setUniform1f("u_blur",I),C.setUniform1f("u_antialiasing",I),this._setSizeVVUniforms(f,C,o,t),this._setColorAndOpacityVVUniforms(f,C,o);var D=n.target.getVAO(a,E,S,v),P=n.indexCount,M=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;v&&(P/=3,M/=3),a.bindVAO(D),this._drawFills(e,t,C,y,P,M)}else c()}},{key:"_drawFills",value:function(e,t,n,i,a,r){e.context.drawElements(i,a,_.k.UNSIGNED_INT,r)}}]),n}(M),F=n(172),j=n(198),k=n(227),U=n(179),z=n(174),V=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._dotTextureSize=0,e._dotTextures=null,e._dotSamplers=new Int32Array([p.Q,p.R]),e._dotVAO=null,e._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])},e}return Object(o.a)(n,[{key:"dispose",value:function(){Object(C.a)(Object(A.a)(n.prototype),"dispose",this).call(this),this._disposeTextures(),this._dotFBO=Object(u.e)(this._dotFBO),this._dotVAO=Object(u.e)(this._dotVAO)}},{key:"getGeometryType",value:function(){return R.d.FILL}},{key:"supportsSymbology",value:function(e){return e===R.e.DOT_DENSITY}},{key:"_drawFills",value:function(e,t,i,a,r,o){var l=e.passOptions;if(Object(u.k)(l)&&"hittest"===l.type)Object(C.a)(Object(A.a)(n.prototype),"_drawFills",this).call(this,e,t,i,a,r,o);else{var s=this._drawDotLocations(e,t,i,r,o);this._drawDotDensity(e,t,s)}}},{key:"_drawDotDensity",value:function(e,t,n){var i=e.context,a=e.painter,r=e.rendererInfo,o=e.requestRender,l=a.materialManager.getProgram(this._dotDesc);if(!Object(u.k)(o)||l.isCompiled){var s=r.rendererSchema;Object(w.a)(s,"dot-density");var c=this._createDotDensityMesh(i,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:_.k.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});i.setStencilTestEnabled(!0),i.useProgram(l),l.setUniform1f("u_tileZoomFactor",1),l.setUniform1i("u_texture",this._dotSamplers[0]),l.setUniform1f("u_dotSize",Math.max(s.dotSize,1)),l.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(l,e,t),i.bindTexture(n,this._dotSamplers[0]),i.bindVAO(c),i.drawArrays(_.r.POINTS,0,262144)}else o()}},{key:"_drawDotLocations",value:function(e,t,n,i,a){var r=e.context,o=e.rendererInfo,l=e.requiredLevel,s=r.getViewport(),u=o.rendererSchema;Object(w.a)(u,"dot-density");var c=u.dotScale,f=u.colors,d=u.activeDots,v=u.backgroundColor,m=u.dotValue;r.setViewport(0,0,512,512);var h=r.getBoundFramebufferObject(),g=this._createFBO(r);r.bindFramebuffer(g),r.setClearColor(0,0,0,0),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.STENCIL_BUFFER_BIT),r.setStencilTestEnabled(!1);var b=1/Math.pow(2,l-t.key.level),y=p.V,x=y*window.devicePixelRatio*y*window.devicePixelRatio,T=1/b*(1/b),O=c?e.state.scale/c:1;return n.setUniform1f("u_tileZoomFactor",b),n.setUniform1f("u_tileDotsOverArea",x/(p.V*window.devicePixelRatio*p.V*window.devicePixelRatio)),n.setUniformMatrix4fv("u_dotColors",f),n.setUniform4fv("u_isActive",d),n.setUniform4fv("u_dotBackgroundColor",v),n.setUniform1f("u_dotValue",Math.max(1,m*O*T)),this._bindDotDensityTextures(r,n,o,y),r.drawElements(_.r.TRIANGLES,i,_.k.UNSIGNED_INT,a),r.setViewport(s.x,s.y,s.width,s.height),r.bindFramebuffer(h),g.colorTexture}},{key:"_createFBO",value:function(e){if(Object(u.j)(this._dotFBO)){var t={target:_.A.TEXTURE_2D,pixelFormat:_.p.RGBA,dataType:_.q.UNSIGNED_BYTE,samplingMode:_.z.NEAREST,wrapMode:_.B.CLAMP_TO_EDGE,width:512,height:512},n={colorTarget:_.y.TEXTURE,depthStencilTarget:_.m.DEPTH_STENCIL_RENDER_BUFFER},i=new k.a(e,{width:512,height:512,internalFormat:_.s.DEPTH_STENCIL});this._dotFBO=new j.a(e,n,t,i)}return this._dotFBO}},{key:"_disposeTextures",value:function(){if(this._dotTextures){for(var e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}},{key:"_bindDotDensityTextures",value:function(e,t,n,i){var a=n.rendererSchema;Object(w.a)(a,"dot-density");var r=this._createDotDensityTextures(e,i,a.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(var o=0;o<r.length;o++)e.bindTexture(r[o],this._dotSamplers[o])}},{key:"_createDotDensityMesh",value:function(e,t,n){if(Object(u.j)(this._dotVAO)){for(var i=new Int16Array(524288),a=0;a<512;a++)for(var r=0;r<512;r++)i[2*(r+512*a)]=r,i[2*(r+512*a)+1]=a;var o=F.a.createVertex(e,_.D.STATIC_DRAW,i);this._dotVAO=new z.a(e,t,n,{geometry:o},null)}return this._dotVAO}},{key:"_createDotDensityTextures",value:function(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){var i=new I.a(n);this._dotTextures=[this._allocDotDensityTexture(e,t,i),this._allocDotDensityTexture(e,t,i)]}return this._dotTextures}},{key:"_allocDotDensityTexture",value:function(e,t,n){for(var i=new Float32Array(t*t*4),a=0;a<i.length;a++)i[a]=n.getFloat();return new U.a(e,{wrapMode:_.B.REPEAT,pixelFormat:_.p.RGBA,dataType:_.q.FLOAT,samplingMode:_.z.NEAREST,width:t,height:t},i)}}]),n}(N),B=n(156),G={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:_.k.SHORT},{location:2,name:"a_texCoords",count:2,type:_.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:_.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:_.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:_.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:_.k.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]},H=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return R.d.MARKER}},{key:"supportsSymbology",value:function(e){return e!==R.e.HEATMAP&&e!==R.e.PIE_CHART}},{key:"drawGeometry",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.rendererInfo,l=e.state,s=e.passOptions,c=e.requestRender,f=L.d.load(n.materialKey),d=Object(w.b)(f.data),v=Object(u.k)(s)&&"hittest"===s.type,m=Object(u.r)(d.programSpec,G),h=m.shader,p=m.vertexLayout,g=m.hittestAttributes,b=_.r.TRIANGLES,y=Object(x.g)(f.data,p);v&&(y=this._getTriangleDesc(n.materialKey,y,g),b=_.r.POINTS);var T=y,O=T.attributes,S=T.bufferLayouts,E=r.materialManager.getMaterialProgram(e,f,h,O,i);if(!Object(u.k)(c)||v||E.isCompiled){a.useProgram(E),f.textureBinding&&r.textureManager.bindTextures(a,E,f,!0),this._setSharedUniforms(E,e,t);var C=f.vvRotation?l.displayViewMat3:l.displayMat3;E.setUniformMatrix3fv("u_displayMat3",C),this._setSizeVVUniforms(f,E,o,t),this._setColorAndOpacityVVUniforms(f,E,o),this._setRotationVVUniforms(f,E,o);var A=n.target.getVAO(a,S,O,v),I=n.indexCount,R=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;v&&(I/=3,R/=3),a.bindVAO(A),this._drawMarkers(e,t,E,b,I,R,v),a.bindVAO(null)}else c()}},{key:"_drawMarkers",value:function(e,t,n,i,a,r,o){e.context.drawElements(i,a,_.k.UNSIGNED_INT,r)}}]),n}(M),Y=n(187),W=B.a.getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap"),q={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])},Z=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"supportsSymbology",value:function(e){return e===R.e.HEATMAP}},{key:"dispose",value:function(){Object(C.a)(Object(A.a)(n.prototype),"dispose",this).call(this),this._accumulateOutputTexture=Object(u.e)(this._accumulateOutputTexture),this._accumulateFramebuffer=Object(u.e)(this._accumulateFramebuffer),this._resolveGradientTexture=Object(u.e)(this._resolveGradientTexture),this._tileQuad=Object(u.e)(this._tileQuad)}},{key:"drawGeometry",value:function(e,t,i,a){var r=this._loadQualityProfile(e.context).defines;Object(C.a)(Object(A.a)(n.prototype),"drawGeometry",this).call(this,e,t,i,a?[].concat(Object(P.a)(a),Object(P.a)(r)):r)}},{key:"_drawMarkers",value:function(e,t,n,i,a,r,o){var l=e.context,s=l.getBoundFramebufferObject(),u=l.getViewport();this._prepareAccumulatePass(e,t,n,o),l.drawElements(i,a,_.k.UNSIGNED_INT,r),o||this._drawResolvePass(e,t,s,u)}},{key:"_prepareAccumulatePass",value:function(e,t,n,i){var a=e.context,r=e.rendererInfo,o=e.state,l=e.displayLevel,s=r.rendererSchema;Object(w.a)(s,"heatmap");var u=s.referenceScale,c=s.radius,f=s.isFieldActive;this._loadResources(a),this._updateResources(s);var d=c*(0!==u?u/o.scale:1)*Math.pow(2,t.key.level-l);n.setUniform1f("u_radius",d),i||(a.bindFramebuffer(this._accumulateFramebuffer),n.setUniform1f("u_isFieldActive",f),a.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),a.setBlendingEnabled(!0),a.setBlendFunction(_.b.ONE,_.b.ONE),a.setClearColor(0,0,0,0),a.clear(_.e.COLOR_BUFFER_BIT))}},{key:"_drawResolvePass",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.rendererInfo.rendererSchema;Object(w.a)(o,"heatmap");var l=o.radius,s=o.minDensity,u=o.densityRange,c=this._loadQualityProfile(a).defines,f=r.materialManager.getProgram(q,c);a.useProgram(f),this._setSharedUniforms(f,e,t),a.bindFramebuffer(n),a.setViewport(0,0,i.width,i.height),a.setBlendFunction(_.b.ONE,_.b.ONE_MINUS_SRC_ALPHA),a.bindTexture(this._accumulateOutputTexture,8),a.bindTexture(this._resolveGradientTexture,9),f.setUniform1i("u_texture",8),f.setUniform1i("u_gradient",9),f.setUniform2f("u_densityMinAndInvRange",s,1/u),f.setUniform1f("u_densityNormalization",3/(l*l*Math.PI)),this._tileQuad.draw()}},{key:"_loadResources",value:function(e){var t,n,i,a,r=e.type===Y.a.WEBGL2,o=this._loadQualityProfile(e),l=o.dataType,s=o.samplingMode,u=o.shadingRate;null!==(t=this._accumulateOutputTexture)&&void 0!==t||(this._accumulateOutputTexture=new U.a(e,{target:_.A.TEXTURE_2D,pixelFormat:r?_.p.RED:_.p.RGBA,internalFormat:r?l===_.q.FLOAT?_.v.R32F:_.v.R16F:_.p.RGBA,dataType:l,samplingMode:s,wrapMode:_.B.CLAMP_TO_EDGE,width:Math.round(512*u),height:Math.round(512*u)})),null!==(n=this._accumulateFramebuffer)&&void 0!==n||(this._accumulateFramebuffer=new j.a(e,{},this._accumulateOutputTexture)),null!==(i=this._resolveGradientTexture)&&void 0!==i||(this._resolveGradientTexture=new U.a(e,{target:_.A.TEXTURE_2D,pixelFormat:_.p.RGBA,dataType:_.q.UNSIGNED_BYTE,samplingMode:_.z.LINEAR,wrapMode:_.B.CLAMP_TO_EDGE})),null!==(a=this._tileQuad)&&void 0!==a||(this._tileQuad=new f.a(e,[0,0,1,0,0,1,1,1]))}},{key:"_updateResources",value:function(e){var t=e.gradientHash,n=e.gradient;this._prevGradientHash!==t&&(this._resolveGradientTexture.resize(n.length/4,1),this._resolveGradientTexture.setData(n),this._prevGradientHash=t)}},{key:"_loadQualityProfile",value:function(e){if(Object(u.j)(this._qualityProfile)){var t,n,i=e.capabilities,a=i.textureFloat,r=i.colorBufferFloat,o=a.textureFloat,l=a.textureFloatLinear,s=a.textureHalfFloat,c=a.textureHalfFloatLinear,f=a.HALF_FLOAT,d=r.textureFloat,v=r.textureHalfFloat,m=r.floatBlend,h=o&&d&&m,p=s&&v;h&&l?(t=_.q.FLOAT,n=_.z.LINEAR):p&&c?(t=f,n=_.z.LINEAR):h?(t=_.q.FLOAT,n=_.z.NEAREST):p?(t=f,n=_.z.NEAREST):W.error("Missing webgl extensions for heatmap!"),n===_.z.NEAREST&&W.warnOnce("Missing linear filtering webgl extension(s). Heatmap quality may be reduced."),this._qualityProfile={dataType:t,samplingMode:n,shadingRate:.5,defines:t===f?["heatmapPrecisionHalfFloat"]:[]}}return this._qualityProfile}}]),n}(H),X=n(245),K=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"supportsSymbology",value:function(e){return e===R.e.PIE_CHART}},{key:"_drawMarkers",value:function(e,t,n,i,a,r,o){var l=e.context,s=e.rendererInfo.rendererSchema;Object(w.a)(s,"pie-chart"),n.setUniform4fv("u_colors",s.colors),n.setUniform4fv("u_defaultColor",s.defaultColor),n.setUniform4fv("u_othersColor",s.othersColor),n.setUniform4fv("u_outlineColor",s.outlineColor),n.setUniform1f("u_donutRatio",s.holePercentage),n.setUniform1f("u_sectorThreshold",s.sectorThreshold),n.setUniform1f("u_outlineWidth",s.outlineWidth),l.drawElements(i,a,_.k.UNSIGNED_INT,r)}}]),n}(H),Q=n(243),J=n(188),$=n(178),ee=n(171),te=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._color=Object(y.a)(1,0,0,1),e._patternMatrix=Object($.b)(),e._programOptions={id:!1,pattern:!1},e}return Object(o.a)(n,[{key:"dispose",value:function(){this._vao&&(this._vao.dispose(),this._vao=null)}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.painter,a=e.styleLayerUID,r=e.requestRender;this._loadWGLResources(e);var o,l,s=e.displayLevel,c=e.styleLayer,f=c.backgroundMaterial,d=i.vectorTilesMaterialManager,v=c.getPaintValue("background-color",s),m=c.getPaintValue("background-opacity",s),h=c.getPaintValue("background-pattern",s),g=void 0!==h,b=v[3]*m,y=1|window.devicePixelRatio,x=e.spriteMosaic,T=y>p.W?2:1,O=e.drawPhase===R.c.HITTEST,S=this._programOptions;S.id=O,S.pattern=g;var E=d.getMaterialProgram(n,f,S);if(!Object(u.k)(r)||O||E.isCompiled){if(n.bindVAO(this._vao),n.useProgram(E),g){var C=x.getMosaicItemPosition(h,!0);if(Object(u.k)(C)){var A=C.tl,I=C.br,P=C.page;o=I[0]-A[0],l=I[1]-A[1];var L=x.getPageSize(P);Object(u.k)(L)&&(x.bind(n,_.z.LINEAR,P,p.Y),E.setUniform4f("u_tlbr",A[0],A[1],I[0],I[1]),E.setUniform2fv("u_mosaicSize",L),E.setUniform1i("u_texture",p.Y))}E.setUniform1f("u_opacity",m)}else this._color[0]=b*v[0],this._color[1]=b*v[1],this._color[2]=b*v[2],this._color[3]=b,E.setUniform4fv("u_color",this._color);if(E.setUniform1f("u_depth",c.z||0),O){var M=Object(ee.c)(a+1);E.setUniform4fv("u_id",M)}var w,N=Object(D.a)(t);try{for(N.s();!(w=N.n()).done;){var F=w.value;if(E.setUniform1f("u_coord_range",F.rangeX),E.setUniformMatrix3fv("u_dvsMat3",F.transforms.dvs),g){var j=Math.max(Math.pow(2,Math.round(s)-F.key.level),1),k=T*F.width*j,U=k/Object(J.k)(o),z=k/Object(J.k)(l);this._patternMatrix[0]=U,this._patternMatrix[4]=z,E.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(_.h.EQUAL,F.stencilRef,255),n.drawArrays(_.r.TRIANGLE_STRIP,0,4)}}catch(V){N.e(V)}finally{N.f()}}else r()}},{key:"_loadWGLResources",value:function(e){if(!this._vao){var t=e.context,n=e.styleLayer.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),a=F.a.createVertex(t,_.D.STATIC_DRAW,i),r=new z.a(t,n.getAttributeLocations(),n.getLayoutInfo(),{geometry:a});this._vao=r}}}]),n}(d.a),ne=n(193),ie=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1},e}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.displayLevel,a=e.requiredLevel,r=e.state,o=e.drawPhase,l=e.painter,s=e.spriteMosaic,c=e.styleLayerUID,f=e.requestRender;if(t.some((function(e){var t,n;return null!==(t=null===(n=e.layerData.get(c))||void 0===n?void 0:n.circleIndexCount)&&void 0!==t&&t}))){var d=e.styleLayer,v=d.circleMaterial,m=l.vectorTilesMaterialManager,h=d.getPaintValue("circle-translate",i),p=d.getPaintValue("circle-translate-anchor",i),g=o===R.c.HITTEST,b=this._programOptions;b.id=g;var y=m.getMaterialProgram(n,v,b);if(g||!Object(u.k)(f)||y.isCompiled){n.useProgram(y),y.setUniformMatrix3fv("u_displayMat3",p===ne.i.VIEWPORT?r.displayMat3:r.displayViewMat3),y.setUniform2fv("u_circleTranslation",h),y.setUniform1f("u_depth",d.z),y.setUniform1f("u_antialiasingWidth",1.2);var x=-1;if(g){var T=Object(ee.c)(c+1);y.setUniform4fv("u_id",T)}var O,S=Object(D.a)(t);try{for(S.s();!(O=S.n()).done;){var E=O.value;if(E.layerData.has(c)){E.key.level!==x&&(x=E.key.level,v.setDataUniforms(y,i,d,x,s));var C=E.layerData.get(c);if(C.circleIndexCount){C.prepareForRendering(n);var A=C.circleVertexArrayObject;Object(u.j)(A)||(n.bindVAO(A),y.setUniformMatrix3fv("u_dvsMat3",E.transforms.dvs),a!==E.key.level?n.setStencilFunction(_.h.EQUAL,E.stencilRef,255):n.setStencilFunction(_.h.GREATER,255,255),n.drawElements(_.r.TRIANGLES,C.circleIndexCount,_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*C.circleIndexStart),E.triangleCount+=C.circleIndexCount/3)}}}}catch(I){S.e(I)}finally{S.f()}}else f()}}}]),n}(d.a),ae=n(14),re=1/65536,oe=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._fillProgramOptions={id:!1,pattern:!1},e._outlineProgramOptions={id:!1},e}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,i=e.displayLevel,a=e.drawPhase,r=e.renderPass,o=e.spriteMosaic,l=e.styleLayerUID,s=!1,u=Object(D.a)(t);try{for(u.s();!(n=u.n()).done;){var c=n.value;if(c.layerData.has(l)){var f=c.layerData.get(l);if(f.fillIndexCount>0||f.outlineIndexCount>0){s=!0;break}}}}catch(I){u.e(I)}finally{u.f()}if(s){var d,_=e.styleLayer,v=_.getPaintProperty("fill-pattern"),m=void 0!==v,h=m&&v.isDataDriven;if(m&&!h){var p=v.getValue(i);d=o.getMosaicItemPosition(p,!0)}var g=!m&&_.getPaintValue("fill-antialias",i),b=!0,y=1;if(!m){var x=_.getPaintProperty("fill-color"),T=_.getPaintProperty("fill-opacity");if((null===x||void 0===x||!x.isDataDriven)&&(null===T||void 0===T||!T.isDataDriven)){var O=_.getPaintValue("fill-color",i);(y=_.getPaintValue("fill-opacity",i)*O[3])>=1&&(b=!1)}}if(!b||"opaque"!==r){var S;a===R.c.HITTEST&&(S=Object(ee.c)(l+1));var E=_.getPaintValue("fill-translate",i),C=_.getPaintValue("fill-translate-anchor",i);(b||"translucent"!==r)&&this._drawFill(e,l,_,t,E,C,m,d,h,S);var A=!_.hasDataDrivenOutlineColor&&_.outlineUsesFillColor&&y<1;g&&"opaque"!==r&&!A&&this._drawOutline(e,l,_,t,E,C,S)}}}},{key:"_drawFill",value:function(e,t,n,i,a,r,o,l,s,c){if(!o||s||!Object(u.j)(l)){var f=e.context,d=e.displayLevel,v=e.state,m=e.drawPhase,h=e.painter,g=e.pixelRatio,b=e.spriteMosaic,y=e.requestRender,x=n.fillMaterial,T=h.vectorTilesMaterialManager,O=g>p.W?2:1,S=m===R.c.HITTEST,E=this._fillProgramOptions;E.id=S,E.pattern=o;var C=T.getMaterialProgram(f,x,E);if(!Object(u.k)(y)||S||C.isCompiled){if(f.useProgram(C),Object(u.k)(l)){var A=l.page,I=b.getPageSize(A);Object(u.k)(I)&&(b.bind(f,_.z.LINEAR,A,p.Y),C.setUniform2fv("u_mosaicSize",I),C.setUniform1i("u_texture",p.Y))}C.setUniformMatrix3fv("u_displayMat3",r===ne.i.VIEWPORT?v.displayMat3:v.displayViewMat3),C.setUniform2fv("u_fillTranslation",a),C.setUniform1f("u_depth",n.z+re),S&&C.setUniform4fv("u_id",c);var P,L=-1,M=Object(D.a)(i);try{for(M.s();!(P=M.n()).done;){var w=P.value;if(w.layerData.has(t)){w.key.level!==L&&(L=w.key.level,x.setDataUniforms(C,d,n,L,b));var N=w.layerData.get(t);if(N.fillIndexCount){N.prepareForRendering(f);var F=N.fillVertexArrayObject;if(!Object(u.j)(F)){if(f.bindVAO(F),C.setUniformMatrix3fv("u_dvsMat3",w.transforms.dvs),f.setStencilFunction(_.h.EQUAL,w.stencilRef,255),o){var j=Math.max(Math.pow(2,Math.round(d)-w.key.level),1),k=w.rangeX/(O*w.width*j);C.setUniform1f("u_patternFactor",k)}if(s){var U=N.patternMap;if(!U)continue;var z,V=Object(D.a)(U);try{for(V.s();!(z=V.n()).done;){var B=Object(ae.a)(z.value,2),G=B[0],H=B[1],Y=b.getPageSize(G);Object(u.k)(Y)&&(b.bind(f,_.z.LINEAR,G,p.Y),C.setUniform2fv("u_mosaicSize",Y),C.setUniform1i("u_texture",p.Y),f.drawElements(_.r.TRIANGLES,H[1],_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*H[0]))}}catch(W){V.e(W)}finally{V.f()}}else f.drawElements(_.r.TRIANGLES,N.fillIndexCount,_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*N.fillIndexStart);w.triangleCount+=N.fillIndexCount/3}}}}}catch(W){M.e(W)}finally{M.f()}}else y()}}},{key:"_drawOutline",value:function(e,t,n,i,a,r,o){var l=e.context,s=e.displayLevel,c=e.state,f=e.drawPhase,d=e.painter,v=e.pixelRatio,m=e.spriteMosaic,h=e.requestRender,p=n.outlineMaterial,g=d.vectorTilesMaterialManager,b=.75/v,y=f===R.c.HITTEST,x=this._outlineProgramOptions;x.id=y;var T=g.getMaterialProgram(l,p,x);if(!Object(u.k)(h)||y||T.isCompiled){l.useProgram(T),T.setUniformMatrix3fv("u_displayMat3",r===ne.i.VIEWPORT?c.displayMat3:c.displayViewMat3),T.setUniform2fv("u_fillTranslation",a),T.setUniform1f("u_depth",n.z+re),T.setUniform1f("u_outline_width",b),y&&T.setUniform4fv("u_id",o);var O,S=-1,E=Object(D.a)(i);try{for(E.s();!(O=E.n()).done;){var C=O.value;if(C.layerData.has(t)){C.key.level!==S&&(S=C.key.level,p.setDataUniforms(T,s,n,S,m));var A=C.layerData.get(t);if(A.prepareForRendering(l),A.outlineIndexCount){var I=A.outlineVertexArrayObject;Object(u.j)(I)||(l.bindVAO(I),T.setUniformMatrix3fv("u_dvsMat3",C.transforms.dvs),l.setStencilFunction(_.h.EQUAL,C.stencilRef,255),l.drawElements(_.r.TRIANGLES,A.outlineIndexCount,_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*A.outlineIndexStart),C.triangleCount+=A.outlineIndexCount/3)}}}}catch(P){E.e(P)}finally{E.f()}}else h()}}]),n}(d.a),le=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1,pattern:!1,sdf:!1},e}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.displayLevel,a=e.state,r=e.drawPhase,o=e.painter,l=e.pixelRatio,s=e.spriteMosaic,c=e.styleLayerUID,f=e.requestRender;if(t.some((function(e){var t,n;return null!==(t=null===(n=e.layerData.get(c))||void 0===n?void 0:n.lineIndexCount)&&void 0!==t&&t}))){var d,v,m=e.styleLayer,h=m.lineMaterial,g=o.vectorTilesMaterialManager,b=m.getPaintValue("line-translate",i),y=m.getPaintValue("line-translate-anchor",i),x=m.getPaintProperty("line-pattern"),T=void 0!==x,O=T&&x.isDataDriven;if(T&&!O){var S=x.getValue(i);d=s.getMosaicItemPosition(S)}var E=!1;if(!T){var C=m.getPaintProperty("line-dasharray");if(E=(v=void 0!==C)&&C.isDataDriven,v&&!E){var A=C.getValue(i),I=m.getDashKey(A,m.getLayoutValue("line-cap",i));d=s.getMosaicItemPosition(I)}}var P=1/l,L=r===R.c.HITTEST,M=this._programOptions;M.id=L,M.pattern=T,M.sdf=v;var w=g.getMaterialProgram(n,h,M);if(!Object(u.k)(f)||L||w.isCompiled){if(n.useProgram(w),w.setUniformMatrix3fv("u_displayViewMat3",a.displayViewMat3),w.setUniformMatrix3fv("u_displayMat3",y===ne.i.VIEWPORT?a.displayMat3:a.displayViewMat3),w.setUniform2fv("u_lineTranslation",b),w.setUniform1f("u_depth",m.z),w.setUniform1f("u_antialiasing",P),L){var N=Object(ee.c)(c+1);w.setUniform4fv("u_id",N)}if(d&&Object(u.k)(d)){var F=d.page,j=s.getPageSize(F);Object(u.k)(j)&&(s.bind(n,_.z.LINEAR,F,p.Y),w.setUniform2fv("u_mosaicSize",j),w.setUniform1i("u_texture",p.Y))}var k,U=-1,z=Object(D.a)(t);try{for(z.s();!(k=z.n()).done;){var V=k.value;if(V.layerData.has(c)){V.key.level!==U&&(U=V.key.level,h.setDataUniforms(w,i,m,U,s));var B=Math.pow(2,i-U)/l;w.setUniform1f("u_zoomFactor",B);var G=V.layerData.get(c);if(G.lineIndexCount){G.prepareForRendering(n);var H=G.lineVertexArrayObject;if(!Object(u.j)(H)){if(n.bindVAO(H),w.setUniformMatrix3fv("u_dvsMat3",V.transforms.dvs),n.setStencilFunction(_.h.EQUAL,V.stencilRef,255),O||E){var Y=G.patternMap;if(!Y)continue;var W,q=Object(D.a)(Y);try{for(q.s();!(W=q.n()).done;){var Z=Object(ae.a)(W.value,2),X=Z[0],K=Z[1],Q=s.getPageSize(X);Object(u.k)(Q)&&(s.bind(n,_.z.LINEAR,X,p.Y),w.setUniform2fv("u_mosaicSize",Q),w.setUniform1i("u_texture",p.Y),n.drawElements(_.r.TRIANGLES,K[1],_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*K[0]))}}catch(J){q.e(J)}finally{q.f()}}else n.drawElements(_.r.TRIANGLES,G.lineIndexCount,_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*G.lineIndexStart);V.triangleCount+=G.lineIndexCount/3}}}}}catch(J){z.e(J)}finally{z.f()}}else f()}}}]),n}(d.a),se=n(184),ue=n(257),ce=n(219),fe=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments))._iconProgramOptions={id:!1,sdf:!1},e._sdfProgramOptions={id:!1},e._spritesTextureSize=Object(se.a)(),e}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,i=e.drawPhase,a=e.styleLayerUID,r=e.styleLayer;i===R.c.HITTEST&&(n=Object(ee.c)(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}},{key:"_drawIcons",value:function(e,t,n,i){var a,r,o=e.context,l=e.displayLevel,s=e.drawPhase,c=e.painter,f=e.spriteMosaic,d=e.state,_=e.styleLayerUID,v=e.requestRender,m=t.iconMaterial,h=c.vectorTilesMaterialManager,g=!1,b=Object(D.a)(n);try{for(b.s();!(r=b.n()).done;){var y=r.value;if(y.layerData.has(_)&&(a=y.layerData.get(_)).iconPerPageElementsMap.size>0){g=!0;break}}}catch(B){b.e(B)}finally{b.f()}if(g){var x=t.getPaintValue("icon-translate",l),T=t.getPaintValue("icon-translate-anchor",l),O=t.getLayoutValue("icon-rotation-alignment",l);O===ne.a.AUTO&&(O=t.getLayoutValue("symbol-placement",l)===ne.e.POINT?ne.a.VIEWPORT:ne.a.MAP);var S=O===ne.a.MAP,E=t.getLayoutValue("icon-keep-upright",l)&&S,C=a.isIconSDF,A=s===R.c.HITTEST,I=this._iconProgramOptions;I.id=A,I.sdf=C;var P=h.getMaterialProgram(o,m,I);if(!Object(u.k)(v)||A||P.isCompiled){o.useProgram(P),P.setUniformMatrix3fv("u_displayViewMat3",O===ne.a.MAP?d.displayViewMat3:d.displayMat3),P.setUniformMatrix3fv("u_displayMat3",T===ne.i.VIEWPORT?d.displayMat3:d.displayViewMat3),P.setUniform2fv("u_iconTranslation",x),P.setUniform1f("u_depth",t.z),P.setUniform1f("u_mapRotation",Object(ce.b)(d.rotation)),P.setUniform1f("u_keepUpright",E?1:0),P.setUniform1f("u_level",10*l),P.setUniform1i("u_texture",p.Y),P.setUniform1f("u_fadeDuration",ue.d/1e3),A&&P.setUniform4fv("u_id",i);var L,M=-1,w=Object(D.a)(n);try{for(w.s();!(L=w.n()).done;){var N=L.value;if(N.layerData.has(_)&&(N.key.level!==M&&(M=N.key.level,m.setDataUniforms(P,l,t,M,f)),0!==(a=N.layerData.get(_)).iconPerPageElementsMap.size)){a.prepareForRendering(o),a.updateOpacityInfo();var F=a.iconVertexArrayObject;if(!Object(u.j)(F)){o.bindVAO(F),P.setUniformMatrix3fv("u_dvsMat3",N.transforms.dvs),P.setUniform1f("u_time",(performance.now()-a.lastOpacityUpdate)/1e3);var j,k=Object(D.a)(a.iconPerPageElementsMap);try{for(k.s();!(j=k.n()).done;){var U=Object(ae.a)(j.value,2),z=U[0],V=U[1];this._renderIconRange(e,P,V,z,N)}}catch(B){k.e(B)}finally{k.f()}}}}}catch(B){w.e(B)}finally{w.f()}}else v()}}},{key:"_renderIconRange",value:function(e,t,n,i,a){var r=e.context,o=e.spriteMosaic;this._spritesTextureSize[0]=o.getWidth(i)/4,this._spritesTextureSize[1]=o.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(r,_.z.LINEAR,i,p.Y),r.setStencilTestEnabled(!0),r.setStencilFunction(_.h.GREATER,255,255),r.setStencilWriteMask(0),r.drawElements(_.r.TRIANGLES,n[1],_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]),a.triangleCount+=n[1]/3}},{key:"_drawText",value:function(e,t,n,i){var a,r,o=this,l=e.context,s=e.displayLevel,c=e.drawPhase,f=e.glyphMosaic,d=e.painter,v=e.pixelRatio,m=e.spriteMosaic,h=e.state,g=e.styleLayerUID,b=e.requestRender,y=t.textMaterial,x=d.vectorTilesMaterialManager,T=!1,O=Object(D.a)(n);try{for(O.s();!(r=O.n()).done;){var S=r.value;if(S.layerData.has(g)&&(a=S.layerData.get(g)).glyphPerPageElementsMap.size>0){T=!0;break}}}catch(W){O.e(W)}finally{O.f()}if(T){var E=t.getPaintProperty("text-opacity");if(!E||E.isDataDriven||0!==E.getValue(s)){var C=t.getPaintProperty("text-color"),A=!C||C.isDataDriven||C.getValue(s)[3]>0,I=t.getPaintProperty("text-halo-width"),P=t.getPaintProperty("text-halo-color"),L=(!I||I.isDataDriven||I.getValue(s)>0)&&(!P||P.isDataDriven||P.getValue(s)[3]>0);if(A||L){var M=t.getLayoutValue("text-rotation-alignment",s);M===ne.a.AUTO&&(M=t.getLayoutValue("symbol-placement",s)===ne.e.POINT?ne.a.VIEWPORT:ne.a.MAP);var w=M===ne.a.MAP,N=t.getLayoutValue("text-keep-upright",s)&&w,F=c===R.c.HITTEST,j=.8*3/v;this._glyphTextureSize||(this._glyphTextureSize=Object(se.b)(f.width/4,f.height/4));var k=t.getPaintValue("text-translate",s),U=t.getPaintValue("text-translate-anchor",s),z=this._sdfProgramOptions;z.id=F;var V=x.getMaterialProgram(l,y,z);if(!Object(u.k)(b)||F||V.isCompiled){l.useProgram(V),V.setUniformMatrix3fv("u_displayViewMat3",M===ne.a.MAP?h.displayViewMat3:h.displayMat3),V.setUniformMatrix3fv("u_displayMat3",U===ne.i.VIEWPORT?h.displayMat3:h.displayViewMat3),V.setUniform2fv("u_textTranslation",k),V.setUniform1f("u_depth",t.z+152587890625e-16),V.setUniform2fv("u_mosaicSize",this._glyphTextureSize),V.setUniform1f("u_mapRotation",Object(ce.b)(h.rotation)),V.setUniform1f("u_keepUpright",N?1:0),V.setUniform1f("u_level",10*s),V.setUniform1i("u_texture",p.X),V.setUniform1f("u_antialiasingWidth",j),V.setUniform1f("u_fadeDuration",ue.d/1e3),F&&V.setUniform4fv("u_id",i);var B,G=-1,H=Object(D.a)(n);try{var Y=function(){var e=B.value;if(!e.layerData.has(g))return"continue";if(e.key.level!==G&&(G=e.key.level,y.setDataUniforms(V,s,t,G,m)),0===(a=e.layerData.get(g)).glyphPerPageElementsMap.size)return"continue";a.prepareForRendering(l),a.updateOpacityInfo();var n=a.textVertexArrayObject;if(Object(u.j)(n))return"continue";l.bindVAO(n),V.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),l.setStencilTestEnabled(!0),l.setStencilFunction(_.h.GREATER,255,255),l.setStencilWriteMask(0);var i=(performance.now()-a.lastOpacityUpdate)/1e3;V.setUniform1f("u_time",i),a.glyphPerPageElementsMap.forEach((function(t,n){o._renderGlyphRange(l,t,n,f,V,L,A,e)}))};for(H.s();!(B=H.n()).done;)Y()}catch(W){H.e(W)}finally{H.f()}}else b()}}}}},{key:"_renderGlyphRange",value:function(e,t,n,i,a,r,o,l){i.bind(e,_.z.LINEAR,n,p.X),r&&(a.setUniform1f("u_halo",1),e.drawElements(_.r.TRIANGLES,t[1],_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),o&&(a.setUniform1f("u_halo",0),e.drawElements(_.r.TRIANGLES,t[1],_.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}]),n}(d.a),de=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return R.d.LABEL}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.state,l=e.rendererInfo,s=e.passOptions,c=e.requestRender,f=L.b.load(n.materialKey),d=Object(u.k)(s)&&"hittest"===s.type,v=f.mapAligned?1:0;if(v||!(Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)){var m,h=(m=f,Object(x.g)(m.data,{geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT},{location:1,name:"a_id",count:4,type:_.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:_.k.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:_.k.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:_.k.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:_.k.SHORT},{location:8,name:"a_texCoords",count:2,type:_.k.UNSIGNED_SHORT}]})),p=h.bufferLayouts,g=h.attributes,b=r.materialManager.getMaterialProgram(e,f,"materials/label",g,i);if(!Object(u.k)(c)||d||b.isCompiled){e.context.setStencilFunction(_.h.EQUAL,0,255),a.useProgram(b),this._setSharedUniforms(b,e,t),r.textureManager.bindTextures(a,b,f);var y=1===v?o.displayViewMat3:o.displayMat3;this._setSizeVVUniforms(f,b,l,t),b.setUniform1f("u_mapRotation",Math.floor(o.rotation/360*254)),b.setUniform1f("u_mapAligned",v),b.setUniformMatrix3fv("u_displayMat3",y),b.setUniform1f("u_opacity",1),b.setUniform2fv("u_screenSize",e.state.size),b.setUniform1f("u_isHalo",1);var T=n.target.getVAO(a,p,g),O=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;a.bindVAO(T),a.drawElements(_.r.TRIANGLES,n.indexCount,_.k.UNSIGNED_INT,O),b.setUniform1f("u_isHalo",0),a.drawElements(_.r.TRIANGLES,n.indexCount,_.k.UNSIGNED_INT,O),a.setStencilTestEnabled(!0),a.setBlendingEnabled(!0)}else c()}}}]),n}(M),_e=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return R.d.LINE}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,i){var a,r=e.context,o=e.painter,l=e.rendererInfo,s=e.displayLevel,c=e.passOptions,f=e.requestRender,d=L.c.load(n.materialKey),v=Object(u.k)(c)&&"hittest"===c.type,m=(a=d,Object(x.g)(a.data,{geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT},{location:1,name:"a_id",count:4,type:_.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:_.k.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:_.k.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:_.k.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:_.k.BYTE},{location:7,name:"a_aux",count:2,type:_.k.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:_.k.UNSIGNED_SHORT}]})),h=_.r.TRIANGLES;v&&(m=this._getTriangleDesc(n.materialKey,m),h=_.r.POINTS);var p=m,g=p.attributes,b=p.bufferLayouts,y=o.materialManager.getMaterialProgram(e,d,"materials/line",g,i);if(!Object(u.k)(f)||v||y.isCompiled){var T=1/e.pixelRatio;r.useProgram(y),this._setSharedUniforms(y,e,t),d.textureBinding&&o.textureManager.bindTextures(r,y,d);var O=Math.pow(2,s-t.key.level);y.setUniform1f("u_zoomFactor",O),y.setUniform1f("u_blur",0+T),y.setUniform1f("u_antialiasing",T),this._setSizeVVUniforms(d,y,l,t),this._setColorAndOpacityVVUniforms(d,y,l),r.setFaceCullingEnabled(!1);var S=n.target.getVAO(r,b,g,v),E=n.indexCount,C=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;v&&(E/=3,C/=3),r.bindVAO(S),r.drawElements(h,E,_.k.UNSIGNED_INT,C)}else f()}}]),n}(M),ve=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return R.d.TEXT}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,i){var a,r=e.context,o=e.painter,l=e.rendererInfo,s=e.state,c=e.passOptions,f=e.requestRender,d=L.f.load(n.materialKey),v=Object(u.k)(c)&&"hittest"===c.type,m=(a=d,Object(x.g)(a.data,{geometry:[{location:0,name:"a_pos",count:2,type:_.k.SHORT},{location:1,name:"a_id",count:4,type:_.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:_.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:_.k.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:_.k.BYTE},{location:6,name:"a_zoomRange",count:2,type:_.k.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:_.k.SHORT},{location:8,name:"a_texCoords",count:2,type:_.k.UNSIGNED_SHORT}]})),h=m.bufferLayouts,p=m.attributes,g=o.materialManager.getMaterialProgram(e,d,"materials/text",p,i);if(!Object(u.k)(f)||v||g.isCompiled){r.useProgram(g);var b=_.r.TRIANGLES;v&&(b=_.r.POINTS),this._setSharedUniforms(g,e,t),o.textureManager.bindTextures(r,g,d),g.setUniformMatrix3fv("u_displayMat3",s.displayMat3),g.setUniformMatrix3fv("u_displayViewMat3",s.displayViewMat3),this._setSizeVVUniforms(d,g,l,t),this._setColorAndOpacityVVUniforms(d,g,l),this._setRotationVVUniforms(d,g,l),g.setUniform1f("u_isHalo",1);var y=n.target.getVAO(r,h,p),T=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;r.bindVAO(y),r.drawElements(_.r.TRIANGLES,n.indexCount,_.k.UNSIGNED_INT,T),g.setUniform1f("u_isHalo",0),r.drawElements(b,n.indexCount,_.k.UNSIGNED_INT,T)}else f()}}]),n}(M),me={marker:H,line:_e,fill:N,text:ve,label:de,clip:S,stencil:Q.a,bitmap:b,overlay:E,raster:m,rasterVF:h.a,flow:i.a,tileInfo:X.a,vtlBackground:te,vtlFill:oe,vtlLine:le,vtlCircle:ie,vtlSymbol:fe,dotDensity:V,heatmap:Z,pieChart:K}},245:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(146),s=n(201),u=n(229),c=n(169),f=n(211),d=n(225),_={shaders:{vertexShader:Object(d.a)("tileInfo/tileInfo.vert"),fragmentShader:Object(d.a)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])},v=n(172),m=n(153),h=n(207),p=n(179),g=n(174),b=300,y=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._color=Object(s.a)(1,0,0,1),e}return Object(a.a)(n,[{key:"dispose",value:function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(m.b.ONE,m.b.ONE_MINUS_SRC_ALPHA,m.b.ONE,m.b.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}},{key:"draw",value:function(e,t){var n=e.context,i=e.requestRender;if(t.isReady)if(this._loadWGLResources(n),!Object(l.k)(i)||this._outlineProgram.isCompiled&&this._tileInfoProgram.isCompiled){n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(m.r.LINE_STRIP,0,4);var a=this._getTexture(n,t);a?(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(a,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",a.descriptor.width,a.descriptor.height),n.drawArrays(m.r.TRIANGLE_STRIP,0,4),n.bindVAO()):n.bindVAO()}else i()}},{key:"_loadWGLResources",value:function(e){if(!this._outlineProgram||!this._tileInfoProgram){var t=Object(h.a)(e,f.a),n=Object(h.a)(e,_),i=new Int8Array([0,0,1,0,1,1,0,1]),a=v.a.createVertex(e,m.D.STATIC_DRAW,i),r=new g.a(e,f.a.attributes,u.a,{geometry:a}),o=new Int8Array([0,0,1,0,0,1,1,1]),l=v.a.createVertex(e,m.D.STATIC_DRAW,o),s=new g.a(e,_.attributes,u.a,{geometry:l});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=s}}},{key:"_getTexture",value:function(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","".concat(b)),this._canvas.setAttribute("height","".concat(32)),this._canvas.setAttribute("style","display:none"));var n=t.triangleCount,i=t.key.id;t.triangleCount>0&&(i+=", ".concat(n));var a=this._canvas,r=a.getContext("2d");return r.font="24px sans-serif",r.textAlign="left",r.textBaseline="top",r.clearRect(0,0,b,32),n>1e5?(r.fillStyle="red",r.fillRect(0,0,b,32),r.fillStyle="black"):(r.clearRect(0,0,b,32),r.fillStyle="blue"),r.fillText(i,0,0),t.texture=new p.a(e,{target:m.A.TEXTURE_2D,pixelFormat:m.p.RGBA,dataType:m.q.UNSIGNED_BYTE,samplingMode:m.z.NEAREST,wrapMode:m.B.CLAMP_TO_EDGE},a),t.texture}}]),n}(c.a)},253:function(e,t,n){"use strict";n.d(t,"a",(function(){return k}));var i=n(60),a=n(142),r=n(143),o=n(164),l=n(163),s=n(144),u=n(145),c=(n(147),n(146)),f=n(178),d=n(244),_=n(258),v=n(14),m=n(159),h=n(156),p=n(175),g=n(208),b=n(7),y=n(5),x=n(242),T=n(223),O=n(236),S=n(189),E=n(216),C=n(171),A=n(172),I=n(153),R=h.a.getLogger("esri.views.2d.engine.webgl.Mesh2D"),D=function(e,t,n,i){for(var a=0,r=1;r<n;r++){var o=e[2*(t+r-1)],l=e[2*(t+r-1)+1];a+=(e[2*(t+r)]-o)*(e[2*(t+r)+1]+l)}return i?a>0:a<0},P=function(e,t){for(var n=e.coords,a=e.lengths,r=[],o=0,l=0;o<a.length;l+=a[o],o+=1){for(var s=l,u=[];o<a.length-1&&D(n,l+a[o],a[o+1],t);l+=a[o+=1])u.push(l+a[o]-s);var c,f=n.slice(2*s,2*(l+a[o])),d=Object(x.a)(f,u,2),_=Object(i.a)(d);try{for(_.s();!(c=_.n()).done;){var v=c.value;r.push(v+s)}}catch(m){_.e(m)}finally{_.f()}}return r},L=function(){function e(t,n,i){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Object(a.a)(this,e),this._cache={},this.vertices=t,this.indices=n,this.primitiveType=i,this.isMapSpace=r}return Object(r.a)(e,[{key:"destroy",value:function(){for(var e in Object(c.k)(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers)Object(c.k)(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}},{key:"elementType",get:function(){return function(e){switch(e.BYTES_PER_ELEMENT){case 1:return I.k.UNSIGNED_BYTE;case 2:return I.k.UNSIGNED_SHORT;case 4:return I.k.UNSIGNED_INT;default:throw new m.a("Cannot get DataType of array")}}(this.indices)}},{key:"getIndexBuffer",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I.D.STATIC_DRAW;return this._cache.indexBuffer||(this._cache.indexBuffer=A.a.createIndex(e,t,this.indices)),this._cache.indexBuffer}},{key:"getVertexBuffers",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I.D.STATIC_DRAW;return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce((function(i,a){return Object(y.a)(Object(y.a)({},i),{},Object(b.a)({},a,A.a.createVertex(e,n,t.vertices[a])))}),{})),this._cache.vertexBuffers}}],[{key:"fromRect",value:function(t){var n=t.x,i=t.y,a=n+t.width,r=i+t.height;return e.fromScreenExtent({xmin:n,ymin:i,xmax:a,ymax:r})}},{key:"fromPath",value:function(t){for(var n=Object(S.f)(new E.a,t.path,!1,!1),i=n.coords,a=new Uint32Array(P(n,!0)),r=new Uint32Array(i.length/2),o=0;o<r.length;o++)r[o]=Object(C.a)(Math.floor(i[2*o]),Math.floor(i[2*o+1]));return new e({geometry:r},a,I.r.TRIANGLES)}},{key:"fromGeometry",value:function(t,n){var i=n.geometry.type;switch(i){case"polygon":return e.fromPolygon(t,n.geometry);case"extent":return e.fromMapExtent(t,n.geometry);default:return R.error(new m.a("mapview-bad-type","Unable to create a mesh from type ".concat(i),n)),e.fromRect({x:0,y:0,width:1,height:1})}}},{key:"fromPolygon",value:function(t,n){for(var i=Object(S.g)(new E.a,n,!1,!1),a=i.coords,r=new Uint32Array(P(i,!1)),o=new Uint32Array(a.length/2),l=Object(O.b)(),s=Object(O.b)(),u=0;u<o.length;u++)Object(T.a)(l,a[2*u],a[2*u+1]),t.toScreen(s,l),o[u]=Object(C.a)(Math.floor(s[0]),Math.floor(s[1]));return new e({geometry:o},r,I.r.TRIANGLES,!0)}},{key:"fromScreenExtent",value:function(t){var n=t.xmin,i=t.xmax,a=t.ymin,r=t.ymax;return new e({geometry:new Uint32Array([Object(C.a)(n,a),Object(C.a)(i,a),Object(C.a)(n,r),Object(C.a)(n,r),Object(C.a)(i,a),Object(C.a)(i,r)])},new Uint32Array([0,1,2,3,4,5]),I.r.TRIANGLES)}},{key:"fromMapExtent",value:function(t,n){var i=t.toScreen([0,0],[n.xmin,n.ymin]),a=Object(v.a)(i,2),r=a[0],o=a[1],l=t.toScreen([0,0],[n.xmax,n.ymax]),s=Object(v.a)(l,2),u=s[0],c=s[1];return new e({geometry:new Uint32Array([Object(C.a)(r,o),Object(C.a)(u,o),Object(C.a)(r,c),Object(C.a)(r,c),Object(C.a)(u,o),Object(C.a)(u,c)])},new Uint32Array([0,1,2,3,4,5]),I.r.TRIANGLES)}}]),e}(),M=n(174),w=h.a.getLogger("esri.views.2d.engine.webgl.ClippingInfo"),N=function(e){return parseFloat(e)/100},F=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(e,i){var r;return Object(a.a)(this,n),(r=t.call(this))._clip=i,r._cache={},r.stage=e,r._handle=Object(p.e)((function(){return i.version}),(function(){return r._invalidate()})),r.ready(),r}return Object(r.a)(n,[{key:"_destroyGL",value:function(){Object(c.k)(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(c.k)(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}},{key:"destroy",value:function(){this._destroyGL(),this._handle.remove()}},{key:"getVAO",value:function(e,t,n,i){var a=Object(v.a)(t.size,2),r=a[0],o=a[1];if("geometry"!==this._clip.type&&this._lastWidth===r&&this._lastHeight===o||(this._lastWidth=r,this._lastHeight=o,this._destroyGL()),Object(c.j)(this._cache.vao)){var l=this._createMesh(t,this._clip),s=l.getIndexBuffer(e),u=l.getVertexBuffers(e);this._cache.mesh=l,this._cache.vao=new M.a(e,n,i,u,s)}return this._cache.vao}},{key:"_createTransforms",value:function(){return{dvs:Object(f.b)()}}},{key:"_invalidate",value:function(){this._destroyGL(),this.requestRender()}},{key:"_createScreenRect",value:function(e,t){var n=Object(v.a)(e.size,2),i=n[0],a=n[1],r="string"==typeof t.left?N(t.left)*i:t.left,o="string"==typeof t.right?N(t.right)*i:t.right,l="string"==typeof t.top?N(t.top)*a:t.top,s="string"==typeof t.bottom?N(t.bottom)*a:t.bottom,u=r,c=l;return{x:u,y:c,width:Math.max(i-o-u,0),height:Math.max(a-s-c,0)}}},{key:"_createMesh",value:function(e,t){switch(t.type){case"rect":return L.fromRect(this._createScreenRect(e,t));case"path":return L.fromPath(t);case"geometry":return L.fromGeometry(e,t);default:return w.error(new m.a("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),L.fromRect({x:0,y:0,width:1,height:1})}}}],[{key:"fromClipArea",value:function(e,t){return new n(e,t)}}]),n}(g.a),j=n(157),k=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).name=e.constructor.name,e}return Object(r.a)(n,[{key:"clips",set:function(e){this._clips=e,this.children.forEach((function(t){return t.clips=e})),this._updateClippingInfo()}},{key:"_createTransforms",value:function(){return{dvs:Object(f.b)()}}},{key:"doRender",value:function(e){var t=this.createRenderParams(e),n=t.painter,i=t.globalOpacity,a=t.profiler,r=t.drawPhase,o=r===j.c.LABEL||r===j.c.HIGHLIGHT?1:i*this.computedOpacity;a.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,o),this.updateTransforms(e.state),this.renderChildren(t),n.compositeLayer(t,o),a.recordContainerEnd()}},{key:"renderChildren",value:function(e){Object(c.j)(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(e.painter));var t,n=Object(i.a)(this.children);try{for(n.s();!(t=n.n()).done;){t.value.beforeRender(e)}}catch(u){n.e(u)}finally{n.f()}var a,r=Object(i.a)(this._renderPasses);try{for(r.s();!(a=r.n()).done;){var o=a.value;try{o.render(e)}catch(f){}}}catch(u){r.e(u)}finally{r.f()}var l,s=Object(i.a)(this.children);try{for(s.s();!(l=s.n()).done;){l.value.afterRender(e)}}catch(u){s.e(u)}finally{s.f()}}},{key:"createRenderParams",value:function(e){return e.requireFBO=this.requiresDedicatedFBO,e}},{key:"prepareRenderPasses",value:function(e){var t=this;return[e.registerRenderPass({name:"clip",brushes:[d.a.clip],target:function(){return t._clippingInfos},drawPhase:j.c.MAP|j.c.LABEL|j.c.LABEL_ALPHA|j.c.DEBUG|j.c.HIGHLIGHT})]}},{key:"updateTransforms",value:function(e){var t,n=Object(i.a)(this.children);try{for(n.s();!(t=n.n()).done;){t.value.setTransform(e)}}catch(a){n.e(a)}finally{n.f()}}},{key:"onAttach",value:function(){Object(o.a)(Object(l.a)(n.prototype),"onAttach",this).call(this),this._updateClippingInfo()}},{key:"onDetach",value:function(){Object(o.a)(Object(l.a)(n.prototype),"onDetach",this).call(this),this._updateClippingInfo()}},{key:"_updateClippingInfo",value:function(){var e=this;if(Object(c.k)(this._clippingInfos)&&(this._clippingInfos.forEach((function(e){return e.destroy()})),this._clippingInfos=null),this.stage){var t=this._clips;Object(c.k)(t)&&t.length&&(this._clippingInfos=t.items.map((function(t){return F.fromClipArea(e.stage,t)}))),this.requestRender()}}}]),n}(_.a)},257:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return o}));var i=!0,a=32,r=1.5,o=200},262:function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(148),s=n(181),u=n(252),c=n(215),f=n(277),d=n(156),_=n(146),v=n(283),m=n(151),h=(n(152),n(147),n(150),n(149)),p=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).layer=null,a.parent=null,a}return Object(a.a)(n,[{key:"initialize",value:function(){var e=this;this.when().catch((function(t){if("layerview:create-error"!==t.name){var n=e.layer&&e.layer.id||"no id",i=e.layer&&e.layer.title||"no title";d.a.getLogger(e.declaredClass).error("#resolve()","Failed to resolve layer view (layer title: '".concat(i,"', id: '").concat(n,"')"),t)}}))}},{key:"fullOpacity",get:function(){return Object(_.r)(this.get("layer.opacity"),1)*Object(_.r)(this.get("parent.fullOpacity"),1)}},{key:"suspended",get:function(){return!this.canResume()}},{key:"suspendInfo",get:function(){return this.getSuspendInfo()}},{key:"legendEnabled",get:function(){var e;return!this.suspended&&!0===(null===(e=this.layer)||void 0===e?void 0:e.legendEnabled)}},{key:"updating",get:function(){var e;return!((null===(e=this.updatingHandles)||void 0===e||!e.updating)&&!this.isUpdating())}},{key:"updatingProgress",get:function(){return this.updating?0:1}},{key:"visible",get:function(){var e;return!0===(null===(e=this.layer)||void 0===e?void 0:e.visible)},set:function(e){void 0!==e?this._override("visible",e):this._clearOverride("visible")}},{key:"canResume",value:function(){var e,t,n;return this.visible&&(null===(e=this.layer)||void 0===e?void 0:e.loaded)&&!(null!==(t=this.parent)&&void 0!==t&&t.suspended)&&(null===(n=this.view)||void 0===n?void 0:n.ready)||!1}},{key:"getSuspendInfo",value:function(){var e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{};return this.view&&this.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}},{key:"isUpdating",value:function(){return!1}}]),n}(Object(c.b)(Object(f.a)(Object(v.b)(u.a.EventedMixin(s.a)))));Object(l.a)([Object(m.b)()],p.prototype,"fullOpacity",null),Object(l.a)([Object(m.b)()],p.prototype,"layer",void 0),Object(l.a)([Object(m.b)()],p.prototype,"parent",void 0),Object(l.a)([Object(m.b)({readOnly:!0})],p.prototype,"suspended",null),Object(l.a)([Object(m.b)({readOnly:!0})],p.prototype,"suspendInfo",null),Object(l.a)([Object(m.b)({readOnly:!0})],p.prototype,"legendEnabled",null),Object(l.a)([Object(m.b)({type:Boolean,readOnly:!0})],p.prototype,"updating",null),Object(l.a)([Object(m.b)({readOnly:!0})],p.prototype,"updatingProgress",null),Object(l.a)([Object(m.b)()],p.prototype,"visible",null),Object(l.a)([Object(m.b)()],p.prototype,"view",void 0);var g=p=Object(l.a)([Object(h.a)("esri.views.layers.LayerView")],p)},264:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var i,a=n(142),r=n(143),o=n(164),l=n(163),s=n(144),u=n(145),c=n(148),f=n(194),d=n(294),_=n(159),v=n(175),m=n(151),h=(n(152),n(147),n(150),n(149)),p=n(258),g=n(160),b=(n(156),n(234),function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n)}(g.a)),y=b=Object(c.a)([Object(h.a)("esri.views.layers.support.ClipArea")],b),x=i=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).type="rect",e.left=null,e.right=null,e.top=null,e.bottom=null,e}return Object(r.a)(n,[{key:"clone",value:function(){return new i({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}},{key:"version",get:function(){return(this._get("version")||0)+1}}]),n}(y);Object(c.a)([Object(m.b)({type:[Number,String],json:{write:!0}})],x.prototype,"left",void 0),Object(c.a)([Object(m.b)({type:[Number,String],json:{write:!0}})],x.prototype,"right",void 0),Object(c.a)([Object(m.b)({type:[Number,String],json:{write:!0}})],x.prototype,"top",void 0),Object(c.a)([Object(m.b)({type:[Number,String],json:{write:!0}})],x.prototype,"bottom",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],x.prototype,"version",null);var T,O=x=i=Object(c.a)([Object(h.a)("esri.views.layers.support.ClipRect")],x),S=(n(177),n(249)),E=n(168),C=n(176),A=n(217),I={base:S.a,key:"type",typeMap:{extent:C.a,polygon:A.a}},R=T=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).type="geometry",e.geometry=null,e}return Object(r.a)(n,[{key:"version",get:function(){return(this._get("version")||0)+1}},{key:"clone",value:function(){return new T({geometry:this.geometry.clone()})}}]),n}(y);Object(c.a)([Object(m.b)({types:I,json:{read:E.a,write:!0}})],R.prototype,"geometry",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],R.prototype,"version",null);var D=R=T=Object(c.a)([Object(h.a)("esri.views.layers.support.Geometry")],R),P=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).type="path",e.path=[],e}return Object(r.a)(n,[{key:"version",get:function(){return(this._get("version")||0)+1}}]),n}(y);Object(c.a)([Object(m.b)({type:[[[Number]]],json:{write:!0}})],P.prototype,"path",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],P.prototype,"version",null);var L=P=Object(c.a)([Object(h.a)("esri.views.layers.support.Path")],P),M=f.a.ofType({key:"type",base:y,typeMap:{rect:O,path:L,geometry:D}}),w=function(e){var t=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).attached=!1,e.clips=new M,e.lastUpdateId=-1,e.moving=!1,e.updateRequested=!1,e}return Object(r.a)(n,[{key:"initialize",value:function(){var e,t,n,i,a=this,r=null===(e=null===(t=this.view)||void 0===t?void 0:t.spatialReferenceLocked)||void 0===e||e;(null===(n=this.view)||void 0===n?void 0:n.spatialReference)&&r&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new _.a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new p.a),this.container.fadeTransitionEnabled=!0,this.container.opacity=0,this.container.clips=this.clips,this.handles.add([Object(v.e)((function(){return a.suspended}),(function(e){a.container&&(a.container.visible=!e),a.view&&!e&&a.updateRequested&&a.view.requestUpdate()}),v.d),Object(v.e)((function(){var e,t;return null!==(e=null===(t=a.layer)||void 0===t?void 0:t.opacity)&&void 0!==e?e:1}),(function(e){a.container&&(a.container.opacity=e)}),v.d),Object(v.e)((function(){return a.layer&&"blendMode"in a.layer?a.layer.blendMode:"normal"}),(function(e){a.container&&(a.container.blendMode=e)}),v.d),Object(v.e)((function(){return a.layer&&"effect"in a.layer?a.layer.effect:null}),(function(e){a.container&&(a.container.effect=e)}),v.d),Object(v.b)((function(){return a.clips}),"change",(function(){a.container&&(a.container.clips=a.clips)}))]),null!==(i=this.view)&&void 0!==i&&i.whenLayerView?this.view.whenLayerView(this.layer).then((function(e){e===a&&a.processAttach()}),(function(){})):this.when().then((function(){a.processAttach()}),(function(){})))}},{key:"destroy",value:function(){this.processDetach(),this.updateRequested=!1}},{key:"spatialReferenceSupported",get:function(){var e,t=null===(e=this.view)||void 0===e?void 0:e.spatialReference;return null==t||this.supportsSpatialReference(t)}},{key:"updating",get:function(){var e;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!(null===(e=this.updatingHandles)||void 0===e||!e.updating))}},{key:"visibleAtCurrentScale",get:function(){return this.isVisibleAtScale(this.view.scale)}},{key:"processAttach",value:function(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}},{key:"processDetach",value:function(){this.attached&&(this.attached=!1,this.detach(),this.updateRequested=!1)}},{key:"isVisibleAtScale",value:function(e){var t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;var n=t.minScale,i=t.maxScale;return(0===n||e<=n)&&(0===i||e>=i)}},{key:"requestUpdate",value:function(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}},{key:"processUpdate",value:function(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}},{key:"hitTest",value:function(e,t){return Promise.resolve(null)}},{key:"supportsSpatialReference",value:function(e){return!0}},{key:"canResume",value:function(){return!!this.spatialReferenceSupported&&!!Object(o.a)(Object(l.a)(n.prototype),"canResume",this).call(this)&&this.visibleAtCurrentScale}},{key:"getSuspendInfo",value:function(){var e=Object(o.a)(Object(l.a)(n.prototype),"getSuspendInfo",this).call(this),t=!this.spatialReferenceSupported,i=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),i&&(e.outsideScaleRange=i),e}}]),n}(e);return Object(c.a)([Object(m.b)()],t.prototype,"attached",void 0),Object(c.a)([Object(m.b)({type:M,set:function(e){var t=Object(d.b)(e,this._get("clips"),M);this._set("clips",t)}})],t.prototype,"clips",void 0),Object(c.a)([Object(m.b)()],t.prototype,"container",void 0),Object(c.a)([Object(m.b)()],t.prototype,"moving",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),Object(c.a)([Object(m.b)({readOnly:!0})],t.prototype,"updateParameters",void 0),Object(c.a)([Object(m.b)()],t.prototype,"updateRequested",void 0),Object(c.a)([Object(m.b)()],t.prototype,"updating",null),Object(c.a)([Object(m.b)()],t.prototype,"view",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=Object(c.a)([Object(h.a)("esri.views.2d.layers.LayerView2D")],t)}},265:function(e,t,n){"use strict";n.d(t,"a",(function(){return F}));var i,a=n(14),r=n(60),o=n(142),l=n(143),s=n(152),u=(n(147),n(146)),c=n(226),f=n(187),d=n(153),_=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],v=!1,m={exports:{}};void 0!==(i=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(m.exports=i);var h,p=m.exports,g={exports:{}};h=g,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(h.exports=t)}();var b,y=g.exports,x={exports:{}};b=x,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"];void 0!==t&&(b.exports=t)}();var T=x.exports,O=999,S=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function E(){var e,t,n,i=0,a=0,r=O,o=[],l=[],s=1,u=0,c=0,f=!1,d=!1,_="";return function(e){return l=[],null!==e?m(e.replace?e.replace(/\r\n/g,"\n"):e):(o.length&&v(o.join("")),r=10,v("(eof)"),l)};function v(e){e.length&&l.push({type:S[r],data:e,position:c,line:s,column:u})}function m(t){var o;for(i=0,n=(_+=t).length;e=_[i],i<n;){switch(o=i,r){case 0:i=x();break;case 1:case 2:i=b();break;case 3:i=E();break;case 4:i=I();break;case 11:i=A();break;case 5:i=R();break;case 9999:i=D();break;case 9:i=g();break;case O:i=h()}o!==i&&("\n"===_[o]?(u=0,++s):++u)}return a+=i,_=_.slice(i),l}function h(){return o=o.length?[]:o,"/"===t&&"*"===e?(c=a+i-1,r=0,t=e,i+1):"/"===t&&"/"===e?(c=a+i-1,r=1,t=e,i+1):"#"===e?(r=2,c=a+i,i):/\s/.test(e)?(r=9,c=a+i,i):(f=/\d/.test(e),d=/[^\w_]/.test(e),c=a+i,r=f?4:d?3:9999,i)}function g(){return/[^\s]/g.test(e)?(v(o.join("")),r=O,i):(o.push(e),t=e,i+1)}function b(){return"\r"!==e&&"\n"!==e||"\\"===t?(o.push(e),t=e,i+1):(v(o.join("")),r=O,i)}function x(){return"/"===e&&"*"===t?(o.push(e),v(o.join("")),r=O,i+1):(o.push(e),t=e,i+1)}function E(){if("."===t&&/\d/.test(e))return r=5,i;if("/"===t&&"*"===e)return r=0,i;if("/"===t&&"/"===e)return r=1,i;if("."===e&&o.length){for(;C(o););return r=5,i}if(";"===e||")"===e||"("===e){if(o.length)for(;C(o););return v(e),r=O,i+1}var n=2===o.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;C(o););return r=O,i}return o.push(e),t=e,i+1}function C(e){for(var t,n,i=0;;){if(t=y.indexOf(e.slice(0,e.length+i).join("")),n=y[t],-1===t){if(i--+e.length>0)continue;n=e.slice(0,1).join("")}return v(n),c+=n.length,(o=o.slice(n.length)).length}}function A(){return/[^a-fA-F0-9]/.test(e)?(v(o.join("")),r=O,i):(o.push(e),t=e,i+1)}function I(){return"."===e||/[eE]/.test(e)?(o.push(e),r=5,t=e,i+1):"x"===e&&1===o.length&&"0"===o[0]?(r=11,o.push(e),t=e,i+1):/[^\d]/.test(e)?(v(o.join("")),r=O,i):(o.push(e),t=e,i+1)}function R(){return"f"===e&&(o.push(e),t=e,i+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(o.push(e),t=e,i+1):/[^\d]/.test(e)?(v(o.join("")),r=O,i):(o.push(e),t=e,i+1)}function D(){if(/[^\d\w_]/.test(e)){var n=o.join("");return r=p.indexOf(n)>-1?8:T.indexOf(n)>-1?7:6,v(o.join("")),r=O,i}return o.push(e),t=e,i+1}}function C(e){return function(e){var t=E(),n=[];return(n=n.concat(t(e))).concat(t(null))}(e)}var A=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function I(e,t){for(var n=t-1;n>=0;n--){var i=e[n];if("whitespace"!==i.type&&"block-comment"!==i.type){if("keyword"!==i.type)break;if("attribute"===i.data||"in"===i.data)return!0}}return!1}function R(e,t,n,i){i=i||n;var a,o=Object(r.a)(e);try{for(o.s();!(a=o.n()).done;){var l=a.value;if("ident"===l.type&&l.data===n)return i in t?t[i]++:t[i]=0,R(e,t,i+"_"+t[i],i)}}catch(s){o.e(s)}finally{o.f()}return n}function D(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"afterVersion";function i(e,t){for(var n=t;n<e.length;n++){var i=e[n];if("operator"===i.type&&";"===i.data)return n}return null}function a(e){for(var t=-1,a=0,r=-1,o=0;o<e.length;o++){var l=e[o];if("preprocessor"===l.type&&(l.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++a:l.data.match(/\#endif\s*.*/)&&--a),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===l.type&&/^#version/.test(l.data)&&(r=Math.max(r,o)),"afterPrecision"===n&&"keyword"===l.type&&"precision"===l.data){var s=i(e,o);if(null===s)throw new Error("precision statement not followed by any semicolons!");r=Math.max(r,s)}t<r&&0===a&&(t=o)}return t+1}var o={data:"\n",type:"whitespace"},l=function(t){return t<e.length&&/[^\r\n]$/.test(e[t].data)},s=a(e);l(s-1)&&e.splice(s++,0,o);var u,c=Object(r.a)(t);try{for(c.s();!(u=c.n()).done;){var f=u.value;e.splice(s++,0,f)}}catch(d){c.e(d)}finally{c.f()}l(s-1)&&l(s)&&e.splice(s,0,o)}function P(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"lowp";D(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function L(e,t,n,i){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"lowp";D(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function M(e,t){for(var n,i,a=-1,r=t;r<e.length;r++){var o=e[r];if("operator"===o.type&&("["===o.data&&(n=r),"]"===o.data)){i=r;break}"integer"===o.type&&(a=parseInt(o.data,10))}return n&&i&&e.splice(n,i-n+1),a}function w(e,t){var n=function(e){return v?N.get(e):null}(e);if(Object(u.k)(n))return n;var i=C(e);if("300 es"===function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"100",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"300 es",a=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/,o=Object(r.a)(e);try{for(o.s();!(t=o.n()).done;){var l=t.value;if("preprocessor"===l.type){var s=a.exec(l.data);if(s){var u=s[1].replace(/\s\s+/g," ");if(u===i)return u;if(u===n)return l.data="#version "+i,n;throw new Error("unknown glsl version: "+u)}}}}catch(c){o.e(c)}finally{o.f()}return e.splice(0,0,{type:"preprocessor",data:"#version "+i},{type:"whitespace",data:"\n"}),null}(i,"100","300 es"))return e;for(var a=null,o=null,l={},s={},c=0;c<i.length;++c){var f=i[c];switch(f.type){case"keyword":t===d.u.VERTEX_SHADER&&"attribute"===f.data?f.data="in":"varying"===f.data&&(f.data=t===d.u.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(f.data.trim())&&(f.data=f.data.replace(/(2D|Cube|EXT)/g,"")),t===d.u.FRAGMENT_SHADER&&"gl_FragColor"===f.data&&(a||P(i,a=R(i,l,"fragColor"),"vec4"),f.data=a),t===d.u.FRAGMENT_SHADER&&"gl_FragData"===f.data){var m=M(i,c+1),h=R(i,l,"fragData");L(i,h,"vec4",m,"mediump"),f.data=h}else t===d.u.FRAGMENT_SHADER&&"gl_FragDepthEXT"===f.data&&(o||(o=R(i,l,"gl_FragDepth")),f.data=o);break;case"ident":if(_.includes(f.data)){if(t===d.u.VERTEX_SHADER&&I(i,c))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");f.data in s||(s[f.data]=R(i,l,f.data)),f.data=s[f.data]}}}for(var p=i.length-1;p>=0;--p){var g=i[p];if("preprocessor"===g.type){var b=g.data.match(/\#extension\s+(.*)\:/);if(b&&b[1]&&A.includes(b[1].trim())){var y=i[p+1];i.splice(p,y&&"whitespace"===y.type?2:1)}var x=g.data.match(/\#ifdef\s+(.*)/);x&&x[1]&&A.includes(x[1].trim())&&(g.data="#if 1");var T=g.data.match(/\#ifndef\s+(.*)/);T&&T[1]&&A.includes(T[1].trim())&&(g.data="#if 0")}}return function(e,t){return v&&N.set(e,t),t}(e,function(e){return e.map((function(e){return"eof"!==e.type?e.data:""})).join("")}(i))}var N=new Map;var F=function(){function e(t,n,i,a){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Map;Object(o.a)(this,e),this._context=t,this._locations=a,this._uniformBlockBindings=r,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===n.length&&console.error("Shaders source should not be empty!"),this._context.type===f.a.WEBGL2&&(n=w(n,d.u.VERTEX_SHADER),i=w(i,d.u.FRAGMENT_SHADER)),this._vShader=j(this._context,d.u.VERTEX_SHADER,n),this._fShader=j(this._context,d.u.FRAGMENT_SHADER,i),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(d.t.Shader,this),Object(c.c)()&&(this.vertexShader=n,this.fragmentShader=i)}return Object(l.a)(e,[{key:"glName",get:function(){if(Object(u.k)(this._glName))return this._glName;if(Object(u.j)(this._vShader))return null;var e=this._context.gl,t=e.createProgram();if(e.attachShader(t,this._vShader),e.attachShader(t,this._fShader),this._locations.forEach((function(n,i){return e.bindAttribLocation(t,n,i)})),e.linkProgram(t),Object(c.c)()&&!e.getProgramParameter(t,e.LINK_STATUS)&&console.error("Could not link shader\nvalidated: ".concat(e.getProgramParameter(t,e.VALIDATE_STATUS),", gl error ").concat(e.getError(),", vertex: ").concat(e.getShaderParameter(this._vShader,e.COMPILE_STATUS),", fragment: ").concat(e.getShaderParameter(this._fShader,e.COMPILE_STATUS),", info log: ").concat(e.getProgramInfoLog(t),", vertex source: ").concat(this.vertexShader,", fragment source: ").concat(this.fragmentShader)),this._context.type===f.a.WEBGL2){var n,i=e,o=Object(r.a)(this._uniformBlockBindings);try{for(o.s();!(n=o.n()).done;){var l=Object(a.a)(n.value,2),s=l[0],_=l[1],v=i.getUniformBlockIndex(t,s);v<4294967295&&i.uniformBlockBinding(t,v,_)}}catch(m){o.e(m)}finally{o.f()}}return this._glName=t,this._context.instanceCounter.increment(d.t.Program,this),t}},{key:"hasGLName",get:function(){return Object(u.k)(this._glName)}},{key:"isCompiled",get:function(){if(this._compiled)return!0;var e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}},{key:"dispose",value:function(){if(!(--this._refCount>0)){var e=this._context.gl;this._vShader&&(e.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(d.t.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(d.t.Program,this))}}},{key:"ref",value:function(){++this._refCount}},{key:"_getUniformLocation",value:function(e){return void 0===this._nameToUniformLocation[e]&&(++U.numUniforms,this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this.glName,e)),this._nameToUniformLocation[e]}},{key:"hasUniform",value:function(e){return null!==this._getUniformLocation(e)}},{key:"setUniform1i",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1iv",value:function(e,t){k(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}},{key:"setUniform2iv",value:function(e,t){k(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}},{key:"setUniform3iv",value:function(e,t){k(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}},{key:"setUniform4iv",value:function(e,t){k(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}},{key:"setUniform1f",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1fv",value:function(e,t){k(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}},{key:"setUniform2f",value:function(e,t,n){var i=this._nameToUniform2.get(e);void 0===i?(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),this._nameToUniform2.set(e,[t,n])):t===i[0]&&n===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),i[0]=t,i[1]=n)}},{key:"setUniform2fv",value:function(e,t){k(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}},{key:"setUniform3f",value:function(e,t,n,i){var a=this._nameToUniform3.get(e);void 0===a?(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),this._nameToUniform3[e]=[t,n,i]):t===a[0]&&n===a[1]&&i===a[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),a[0]=t,a[1]=n,a[2]=i)}},{key:"setUniform3fv",value:function(e,t){k(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(this._getUniformLocation(e),t)}},{key:"setUniform4f",value:function(e,t,n,i,a){var r=this._nameToUniform4.get(e);void 0===r?(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,a),this._nameToUniform4.set(e,[t,n,i,a])):void 0!==r&&t===r[0]&&n===r[1]&&i===r[2]&&a===r[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,a),r[0]=t,r[1]=n,r[2]=i,r[3]=a)}},{key:"setUniform4fv",value:function(e,t){k(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(this._getUniformLocation(e),t)}},{key:"setUniformMatrix3fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];k(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t)}},{key:"setUniformMatrix4fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];k(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t)}},{key:"stop",value:function(){}}]),e}();function j(e,t,n){var i=e.gl,a=i.createShader(t);return i.shaderSource(a,n),i.compileShader(a),Object(c.c)()&&!i.getShaderParameter(a,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===d.u.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(a)),console.error(function(e){var t=2;return e.replace(/\n/g,(function(){return"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"}))}(n))),U.enabled&&(U.compiledLOC+=n.match(/\n/g).length+1),a}function k(e,t,n){var i=e.get(t);return i?Object(s.m)(i,n):(e.set(t,Array.from(n)),!0)}var U={compiledLOC:0,numUniforms:0,enabled:!1}},271:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(142),a=n(143),r=function(){function e(t){Object(i.a)(this,e),this.readFile=t}return Object(a.a)(e,[{key:"resolveIncludes",value:function(e){return this._resolve(e)}},{key:"_resolve",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(n.has(e))return n.get(e);var i=this._read(e);if(!i)throw new Error("cannot find shader file ".concat(e));for(var a=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm,r=a.exec(i),o=[];null!=r;)o.push({path:r[1],start:r.index,length:r[0].length}),r=a.exec(i);var l=0,s="";return o.forEach((function(e){s+=i.slice(l,e.start),s+=n.has(e.path)?"":t._resolve(e.path,n),l=e.start+e.length})),s+=i.slice(l),n.set(e,s),s}},{key:"_read",value:function(e){return this.readFile(e)}}]),e}()},274:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(146),s=n(178),u=n(169),c=n(153),f=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._visualState={time:0,dvsMat3:Object(s.b)(),displayViewMat3:Object(s.b)()},e}return Object(a.a)(n,[{key:"dispose",value:function(){}},{key:"prepareState",value:function(e){var t=e.context;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(c.h.EQUAL,0,255)}},{key:"draw",value:function(e,t){var n=e.requestRender,i=t.displayData;if(!Object(l.j)(i)&&("loaded"===i.state.name&&i.attach(e),"attached"===i.state.name)){var a=i.state.resources;a.ready||!Object(l.k)(n)?(this._visualState.time=e.time/1e3,this._visualState.dvsMat3=t.transforms.dvs,this._visualState.displayViewMat3=e.state.displayViewMat3,i.flowStyle.render(e,this._visualState,a),i.flowStyle.animated&&Object(l.k)(n)&&n()):n()}}}]),n}(u.a)},275:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(146),s=n(169),u=n(153),c=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),f={beaufort_ft:c,beaufort_m:c,beaufort_km:c,beaufort_mi:c,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])},d=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._desc={magdir:{vsPath:"raster/magdir",fsPath:"raster/magdir",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])},scalar:{vsPath:"raster/scalar",fsPath:"raster/scalar",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])}},e}return Object(a.a)(n,[{key:"dispose",value:function(){}},{key:"prepareState",value:function(e,t){var n=e.context;n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(u.b.ONE,u.b.ONE_MINUS_SRC_ALPHA,u.b.ONE,u.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilOp(u.w.KEEP,u.w.KEEP,u.w.REPLACE),n.setStencilFunction(u.h.EQUAL,t.stencilRef,255)}},{key:"draw",value:function(e,t){if(!Object(l.j)(t.source)&&0!==t.source.validPixelCount){var n=e.timeline;if(n.begin(this.name),t.updateVectorFieldVAO(e),"scalar"===e.renderPass){var i=t.vaoData.scalar;i&&this._drawScalars(e,t,i.vao,i.elementCount)}else{var a=t.vaoData.magdir;a&&this._drawTriangles(e,t,a.vao,a.elementCount)}n.end(this.name)}}},{key:"_drawTriangles",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.requestRender,s=t.symbolizerParameters,c=s.dataRange?["dataRange"]:[];"geographic"===s.rotationType&&c.push("rotationGeographic");var d=r.materialManager.getProgram(this._desc.magdir,c);if(!Object(l.k)(o)||d.isCompiled){a.useProgram(d);var _=t.coordScale,v=t.opacity,m=t.transforms;d.setUniform2fv("u_coordScale",_),d.setUniform1f("u_opacity",v),d.setUniformMatrix3fv("u_dvsMat3",m.dvs);var h=s.style,p=s.dataRange,g=s.rotation,b=s.symbolPercentRange;d.setUniform4fv("u_colors",f[h]||f.single_arrow),d.setUniform2fv("u_dataRange",p),d.setUniform1f("u_rotation",g),d.setUniform2fv("u_symbolPercentRange",b);var y=this._getSymbolSize(e,t);d.setUniform2fv("u_symbolSize",y),a.bindVAO(n),a.drawElements(u.r.TRIANGLES,i,u.k.UNSIGNED_INT,0)}else o()}},{key:"_drawScalars",value:function(e,t,n,i){var a=e.context,r=e.painter,o=e.requestRender,s=t.symbolizerParameters,c=[];"wind_speed"===s.style?c.push("innerCircle"):s.dataRange&&c.push("dataRange"),"geographic"===s.rotationType&&c.push("rotationGeographic");var f=r.materialManager.getProgram(this._desc.scalar,c);if(!Object(l.k)(o)||f.isCompiled){a.useProgram(f);var d=t.coordScale,_=t.opacity,v=t.transforms;f.setUniform2fv("u_coordScale",d),f.setUniform1f("u_opacity",_),f.setUniformMatrix3fv("u_dvsMat3",v.dvs);var m=s.dataRange,h=s.symbolPercentRange;f.setUniform2fv("u_dataRange",m),f.setUniform2fv("u_symbolPercentRange",h);var p=this._getSymbolSize(e,t);f.setUniform2fv("u_symbolSize",p),a.bindVAO(n),a.drawElements(u.r.TRIANGLES,i,u.k.UNSIGNED_INT,0)}else o()}},{key:"_getSymbolSize",value:function(e,t){var n=t.key?Math.pow(2,e.displayLevel-t.key.level):t.resolution/e.state.resolution,i=t.symbolizerParameters.symbolTileSize;return[i/(Math.round((t.width-t.offset[0])/i)*i)/n,i/(Math.round((t.height-t.offset[1])/i)*i)/n]}}]),n}(s.a)},281:function(e,t,n){"use strict";n.d(t,"a",(function(){return g})),n.d(t,"b",(function(){return b}));var i=n(16),a=n(14),r=n(142),o=n(143),l=n(144),s=n(145),u=n(146),c=n(204),f=n(178),d=n(184),_=n(299),v=n(208),m=n(153),h=n(231),p={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"},g=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return Object(r.a)(this,n),(e=t.call(this))._textureInvalidated=!0,e._colormapTextureInvalidated=!0,e._supportsBilinearTexture=!0,e.stencilRef=0,e.coordScale=[1,1],e._symbolizerParameters=null,e.height=null,e.isRendereredSource=!1,e.pixelRatio=1,e.resolution=0,e.rotation=0,e._source=null,e.rawPixelData=null,e._suspended=!1,e._bandIds=null,e._interpolation=null,e._transformGrid=null,e.width=null,e.x=0,e.y=0,e.source=i,e.transformGrid=a,e.interpolation=o,e}return Object(o.a)(n,[{key:"destroy",value:function(){var e;null!==(e=this.getTextures())&&void 0!==e&&e.textures.forEach((function(e){return e.dispose()})),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}},{key:"symbolizerParameters",get:function(){return this._symbolizerParameters||p},set:function(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}},{key:"source",get:function(){return this._source},set:function(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}},{key:"suspended",get:function(){return this._suspended},set:function(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}},{key:"bandIds",get:function(){return this._bandIds},set:function(e){this._bandIds=e,this._isBandIdschanged(e)&&this.invalidateTexture()}},{key:"interpolation",get:function(){return this._interpolation||"nearest"},set:function(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e)?m.z.LINEAR:m.z.NEAREST)}},{key:"transformGrid",get:function(){return this._transformGrid},set:function(e){this._transformGrid=e,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}},{key:"invalidateTexture",value:function(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}},{key:"_createTransforms",value:function(){return{dvs:Object(f.b)()}}},{key:"setTransform",value:function(e){var t=Object(c.b)(this.transforms.dvs),n=e.toScreenNoRotation([0,0],[this.x,this.y]),i=Object(a.a)(n,2),r=i[0],o=i[1],l=this.resolution/this.pixelRatio/e.resolution,s=l*this.width,u=l*this.height,f=Math.PI*this.rotation/180;Object(c.c)(t,t,Object(d.b)(r,o)),Object(c.c)(t,t,Object(d.b)(s/2,u/2)),Object(c.k)(t,t,-f),Object(c.c)(t,t,Object(d.b)(-s/2,-u/2)),Object(c.h)(t,t,Object(d.b)(s,u)),Object(c.i)(this.transforms.dvs,e.displayViewMat3,t)}},{key:"getTextures",value:function(){if(!this._rasterTexture)return null;var e=[],t=[];return this._transformGridTexture&&(t.push(this._transformGridTexture),e.push("u_transformGrid")),this._rasterTexture&&(t.push(this._rasterTexture),e.push("u_image")),this._colormapTexture&&(t.push(this._colormapTexture),e.push("u_colormap")),{names:e,textures:t}}},{key:"onAttach",value:function(){this.invalidateTexture()}},{key:"onDetach",value:function(){this.invalidateTexture()}},{key:"updateTexture",value:function(e){var t,n,i,a=e.context;if(!this.stage)return null!==(t=this._rasterTexture)&&void 0!==t&&t.dispose(),null!==(n=this._transformGridTexture)&&void 0!==n&&n.dispose(),null!==(i=this._colormapTexture)&&void 0!==i&&i.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);var r=this._isValidSource(this.source);r&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(a)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(a),this._rasterTexture&&(r?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Object(h.c)(a,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}},{key:"_createOrDestroyRasterTexture",value:function(e){var t,n,a=Object(u.k)(this.source)?Object(_.d)(this.source,this.bandIds):null;if(this._isValidSource(a)){var r=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(r)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=null===(t=e.capabilities.textureFloat)||void 0===t?void 0:t.textureFloatLinear;var o=this._getTextureSamplingMethod(this.interpolation),l=this.isRendereredSource||!(null!==(n=e.capabilities.textureFloat)&&void 0!==n&&n.textureFloat);this._rasterTexture=Object(h.b)(e,a,o,l),this._rasterTextureBandIds=this.bandIds?Object(i.a)(this.bandIds):null}else this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null)}},{key:"_isBandIdschanged",value:function(e){var t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}},{key:"_isValidSource",value:function(e){var t;return Object(u.k)(e)&&(null===(t=e.pixels)||void 0===t?void 0:t.length)>0}},{key:"_getTextureSamplingMethod",value:function(e){var t=this.symbolizerParameters,n=t.type,i=t.colormap,a="lut"===n||"stretch"===n&&Object(u.k)(i);return!this._supportsBilinearTexture||a||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}},{key:"_updateColormapTexture",value:function(e){var t=this._colormap,n=this.symbolizerParameters.colormap;return n?t?n.length!==t.length||n.some((function(e,n){return e!==t[n]}))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Object(h.a)(e,n),void(this._colormap=n)):void 0:(this._colormapTexture=Object(h.a)(e,n),void(this._colormap=n)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}]),n}(v.a);function b(e){return Object(u.k)(e.source)}},302:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var i=n(14),a=n(142),r=n(143),o=n(144),l=n(145),s=n(204),u=n(208),c=n(241),f=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(e,i,r,o,l){var s,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:o,f=arguments.length>6&&void 0!==arguments[6]?arguments[6]:l;return Object(a.a)(this,n),(s=t.call(this)).triangleCountReportedInDebug=0,s.triangleCount=0,s.texture=null,s.key=new c.a(e),s.x=i,s.y=r,s.width=o,s.height=l,s.rangeX=u,s.rangeY=f,s}return Object(r.a)(n,[{key:"destroy",value:function(){this.texture&&(this.texture.dispose(),this.texture=null)}},{key:"setTransform",value:function(e,t){var n=t/(e.resolution*e.pixelRatio),a=this.transforms.tileMat3,r=e.toScreenNoRotation([0,0],[this.x,this.y]),o=Object(i.a)(r,2),l=o[0],u=o[1],c=this.width/this.rangeX*n,f=this.height/this.rangeY*n;Object(s.l)(a,c,0,0,0,f,0,l,u,1),Object(s.i)(this.transforms.dvs,e.displayViewMat3,a)}}]),n}(u.a)},317:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var i=n(60),a=n(142),r=n(143),o=n(164),l=n(163),s=n(144),u=n(145),c=n(147),f=n(157),d=n(253),_=n(245),v=n(243),m=function(e,t){return e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col},h=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this))._tileInfoView=e,i}return Object(r.a)(n,[{key:"requiresDedicatedFBO",get:function(){return!1}},{key:"renderChildren",value:function(e){this.sortChildren(m),this.setStencilReference(e),Object(o.a)(Object(l.a)(n.prototype),"renderChildren",this).call(this,e)}},{key:"createRenderParams",value:function(e){var t=e.state,i=Object(o.a)(Object(l.a)(n.prototype),"createRenderParams",this).call(this,e);return i.requiredLevel=this._tileInfoView.getClosestInfoForScale(t.scale).level,i.displayLevel=this._tileInfoView.tileInfo.scaleToZoom(t.scale),i}},{key:"prepareRenderPasses",value:function(e){var t=this,i=Object(o.a)(Object(l.a)(n.prototype),"prepareRenderPasses",this).call(this,e);return i.push(e.registerRenderPass({name:"stencil",brushes:[v.a],drawPhase:f.c.DEBUG|f.c.MAP|f.c.HIGHLIGHT,target:function(){return t.getStencilTarget()}})),Object(c.a)("esri-tiles-debug")&&i.push(e.registerRenderPass({name:"tileInfo",brushes:[_.a],drawPhase:f.c.DEBUG,target:function(){return t.children}})),i}},{key:"getStencilTarget",value:function(){return this.children}},{key:"updateTransforms",value:function(e){var t,n=Object(i.a)(this.children);try{for(n.s();!(t=n.n()).done;){var a=t.value,r=this._tileInfoView.getTileResolution(a.key);a.setTransform(e,r)}}catch(o){n.e(o)}finally{n.f()}}},{key:"setStencilReference",value:function(e){var t,n=1,a=Object(i.a)(this.children);try{for(a.s();!(t=a.n()).done;){t.value.stencilRef=n++}}catch(r){a.e(r)}finally{a.f()}}}]),n}(d.a)},354:function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(148),s=n(156),u=n(162),c=n(175),f=n(151),d=(n(152),n(147),n(150),n(149)),_=function(e){var t=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"initialize",value:function(){var e=this;this.handles.add(Object(c.b)((function(){return e.layer}),"refresh",(function(t){e.doRefresh(t.dataChanged).catch((function(t){Object(u.j)(t)||s.a.getLogger(e.declaredClass).error(t)}))})),"RefreshableLayerView")}}]),n}(e);return Object(l.a)([Object(f.b)()],t.prototype,"layer",void 0),t=Object(l.a)([Object(d.a)("esri.layers.mixins.RefreshableLayerView")],t)}},382:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(142),a=n(143),r=n(146),o=function(){function e(t,n,a){Object(i.a)(this,e),this.pixelBlock=t,this.extent=n,this.originalPixelBlock=a}return Object(a.a)(e,[{key:"width",get:function(){return Object(r.k)(this.pixelBlock)?this.pixelBlock.width:0}},{key:"height",get:function(){return Object(r.k)(this.pixelBlock)?this.pixelBlock.height:0}},{key:"render",value:function(e){var t=this.pixelBlock;if(!Object(r.j)(t)){var n=this.filter({pixelBlock:t});if(!Object(r.j)(n.pixelBlock)){var i=n.pixelBlock.getAsRGBA(),a=e.createImageData(n.pixelBlock.width,n.pixelBlock.height);a.data.set(i),e.putImageData(a,0,0)}}}},{key:"getRenderedRasterPixels",value:function(){var e=this.filter({pixelBlock:this.pixelBlock});return Object(r.j)(e.pixelBlock)?null:{width:e.pixelBlock.width,height:e.pixelBlock.height,renderedRasterPixels:new Uint8Array(e.pixelBlock.getAsRGBA().buffer)}}}]),e}()},397:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var i=n(14),a=n(142),r=n(143),o=n(209),l=n(164),s=n(163),u=n(144),c=n(145),f=n(146),d=n(204),_=n(178),v=n(184),m=n(208),h=n(382),p=n(153),g=n(179);function b(e,t,n){var i={target:p.A.TEXTURE_2D,pixelFormat:p.p.RGBA,internalFormat:p.p.RGBA,dataType:p.q.UNSIGNED_BYTE,wrapMode:p.B.CLAMP_TO_EDGE};return t&&n&&(i.width=t,i.height=n),new g.a(e,i)}var y=function(e){Object(u.a)(n,e);var t=Object(c.a)(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1?arguments[1]:void 0,l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return Object(a.a)(this,n),(e=t.call(this)).requestRenderOnSourceChangedEnabled=l,e._textureInvalidated=!0,e.stencilRef=0,e.coordScale=[1,1],e._height=void 0,e.pixelRatio=1,e.resolution=0,e.rotation=0,e._source=null,e._width=void 0,e.x=0,e.y=0,e.blendFunction=r,e.source=i,e.requestRender=e.requestRender.bind(Object(o.a)(e)),e}return Object(r.a)(n,[{key:"destroy",value:function(){this._texture&&(this._texture.dispose(),this._texture=null)}},{key:"isSourceScaled",get:function(){return this.width!==this.sourceWidth||this.height!==this.sourceHeight}},{key:"height",get:function(){return void 0!==this._height?this._height:this.sourceHeight},set:function(e){this._height=e}},{key:"source",get:function(){return this._source},set:function(e){this._source=e,this.invalidateTexture()}},{key:"sourceHeight",get:function(){return this._source instanceof HTMLImageElement?this._source.naturalHeight:this._source.height}},{key:"sourceWidth",get:function(){return this._source instanceof HTMLImageElement?this._source.naturalWidth:this._source.width}},{key:"width",get:function(){return void 0!==this._width?this._width:this.sourceWidth},set:function(e){this._width=e}},{key:"beforeRender",value:function(e){Object(l.a)(Object(s.a)(n.prototype),"beforeRender",this).call(this,e),this.updateTexture(e.context)}},{key:"invalidateTexture",value:function(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRenderOnSourceChangedEnabled&&this.requestRender())}},{key:"_createTransforms",value:function(){return{dvs:Object(_.b)()}}},{key:"setTransform",value:function(e){var t=Object(d.b)(this.transforms.dvs),n=e.toScreenNoRotation([0,0],[this.x,this.y]),a=Object(i.a)(n,2),r=a[0],o=a[1],l=this.resolution/this.pixelRatio/e.resolution,s=l*this.width,u=l*this.height,c=Math.PI*this.rotation/180;Object(d.c)(t,t,Object(v.b)(r,o)),Object(d.c)(t,t,Object(v.b)(s/2,u/2)),Object(d.k)(t,t,-c),Object(d.c)(t,t,Object(v.b)(-s/2,-u/2)),Object(d.h)(t,t,Object(v.b)(s,u)),Object(d.i)(this.transforms.dvs,e.displayViewMat3,t)}},{key:"setSamplingProfile",value:function(e){this._texture&&(e.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(e.samplingMode))}},{key:"bind",value:function(e,t){this._texture&&e.bindTexture(this._texture,t)}},{key:"updateTexture",value:function(e){var t;if(!this.stage)return null!==(t=this._texture)&&void 0!==t&&t.dispose(),void(this._texture=null);if(this._textureInvalidated){this._textureInvalidated=!1,this._texture||(this.source?this._texture=b(e,this.sourceWidth,this.sourceHeight):this._texture=b(e));var n,i=this.source;if(i){if(this._texture.resize(this.sourceWidth,this.sourceHeight),(n=i)&&"render"in n)if(i instanceof h.a){var a=i.getRenderedRasterPixels();this._texture.setData(Object(f.k)(a)?a.renderedRasterPixels:null)}else this._texture.setData(function(e){var t=document.createElement("canvas");return t.width=e.width,t.height=e.height,e.render(t.getContext("2d")),t}(i));else(function(e){return e&&!("render"in e)})(i)&&this._texture.setData(i);this.ready()}else this._texture.setData(null)}}},{key:"onAttach",value:function(){this.invalidateTexture()}},{key:"onDetach",value:function(){this.invalidateTexture()}}]),n}(m.a)},648:function(e,t,n){"use strict";function i(e,t){return t?"xoffset"in t&&t.xoffset?Math.max(e,Math.abs(t.xoffset)):"yoffset"in t&&t.yoffset?Math.max(e,Math.abs(t.yoffset||0)):e:e}function a(e,t){return"number"==typeof e?e:e&&e.stops&&e.stops.length?function(e){for(var t=0,n=0,i=0;i<e.length;i++){var a=e[i].size;"number"==typeof a&&(t+=a,n++)}return t/n}(e.stops):t}function r(e,t){if(!t)return e;var n=t.filter((function(e){return"size"===e.type})).map((function(t){var n=t.maxSize,i=t.minSize;return(a(n,e)+a(i,e))/2})),i=0,r=n.length;if(0===r)return e;for(var o=0;o<r;o++)i+=n[o];var l=Math.floor(i/r);return Math.max(l,e)}function o(e){var t=e&&e.renderer,n="touch"===(e&&e.event&&e.event.pointerType)?9:6;if(!t)return n;var a="visualVariables"in t?r(n,t.visualVariables):n;if("simple"===t.type)return i(a,t.symbol);if("unique-value"===t.type){var o=a;return t.uniqueValueInfos.forEach((function(e){o=i(o,e.symbol)})),o}if("class-breaks"===t.type){var l=a;return t.classBreakInfos.forEach((function(e){l=i(l,e.symbol)})),l}return"dot-density"===t.type||t.type,a}n.d(t,"a",(function(){return o}))},675:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var i=n(16),a=n(14),r=n(142),o=n(143),l=n(164),s=n(163),u=n(144),c=n(145),f=n(180),d=n(178),_=n(397),v=function(e){Object(u.a)(n,e);var t=Object(c.a)(n);function n(e,i,a,o,l){var s,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;return Object(r.a)(this,n),(s=t.call(this,e,i,a,o,l)).bitmap=new _.a(u,"standard",!1),s.bitmap.coordScale=[o,l],s.bitmap.once("isReady",(function(){return s.ready()})),s}return Object(o.a)(n,[{key:"destroy",value:function(){Object(l.a)(Object(s.a)(n.prototype),"destroy",this).call(this),this.bitmap.destroy()}},{key:"beforeRender",value:function(e){Object(l.a)(Object(s.a)(n.prototype),"beforeRender",this).call(this,e),this.bitmap.beforeRender(e)}},{key:"afterRender",value:function(e){Object(l.a)(Object(s.a)(n.prototype),"afterRender",this).call(this,e),this.bitmap.afterRender(e)}},{key:"stencilRef",get:function(){return this.bitmap.stencilRef},set:function(e){this.bitmap.stencilRef=e}},{key:"_createTransforms",value:function(){return{dvs:Object(d.b)(),tileMat3:Object(d.b)()}}},{key:"setTransform",value:function(e,t){Object(l.a)(Object(s.a)(n.prototype),"setTransform",this).call(this,e,t),this.bitmap.transforms.dvs=this.transforms.dvs}},{key:"onAttach",value:function(){this.bitmap.stage=this.stage}},{key:"onDetach",value:function(){this.bitmap&&(this.bitmap.stage=null)}}]),n}(n(302).a),m=n(244),h=n(157),p=function(e){Object(u.a)(n,e);var t=Object(c.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"requiresDedicatedFBO",get:function(){return this.children.some((function(e){return"additive"===e.bitmap.blendFunction}))}},{key:"createTile",value:function(e){var t=this._tileInfoView.getTileBounds(Object(f.g)(),e),n=Object(a.a)(this._tileInfoView.tileInfo.size,2),i=n[0],r=n[1];return new v(e,t[0],t[3],i,r)}},{key:"prepareRenderPasses",value:function(e){var t=this,a=e.registerRenderPass({name:"bitmap (tile)",brushes:[m.a.bitmap],target:function(){return t.children.map((function(e){return e.bitmap}))},drawPhase:h.c.MAP});return[].concat(Object(i.a)(Object(l.a)(Object(s.a)(n.prototype),"prepareRenderPasses",this).call(this,e)),[a])}},{key:"doRender",value:function(e){this.visible&&e.drawPhase===h.c.MAP&&Object(l.a)(Object(s.a)(n.prototype),"doRender",this).call(this,e)}}]),n}(n(317).a)},861:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(142),a=n(143),r=n(144),o=n(145),l=n(148),s=(n(156),n(150),n(152),n(147),n(234),n(149)),u=n(675),c=function(e){var t=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"attach",value:function(){this.view.timeline.record("".concat(this.layer.title," (BitmapTileLayer) Attach")),this._bitmapView=new u.a(this._tileInfoView),this.container.addChild(this._bitmapView)}},{key:"detach",value:function(){var e;this.container.removeChild(this._bitmapView),null===(e=this._bitmapView)||void 0===e||e.removeAllChildren()}}]),n}(e);return t=Object(l.a)([Object(s.a)("esri.views.2d.layers.BitmapTileLayerView2D")],t)}},862:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));var i=n(14);function a(e,t,n,i){if(n.level===i.level)return t;var a=e.tileInfo.size,o=e.getTileResolution(n.level),l=e.getTileResolution(i.level),s=e.getLODInfoAt(i.level),u=s.getXForColumn(i.col),c=s.getYForRow(i.row),f=(s=e.getLODInfoAt(n.level)).getXForColumn(n.col),d=s.getYForRow(n.row),_=function(e){return e instanceof HTMLImageElement?e.naturalWidth:e.width}(t)/a[0],v=function(e){return e instanceof HTMLImageElement?e.naturalHeight:e.height}(t)/a[1],m=Math.round(_*((u-f)/o)),h=Math.round(v*(-(c-d)/o)),p=Math.round(_*a[0]*(l/o)),g=Math.round(v*a[1]*(l/o)),b=r(a);return b.getContext("2d").drawImage(t,m,h,p,g,0,0,a[0],a[1]),b}function r(e){var t,n,a=document.createElement("canvas");return t=e,n=Object(i.a)(t,2),a.width=n[0],a.height=n[1],a}},863:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(177);var i=n(146),a=n(250),r=(n(648),n(176));function o(e,t,n){var o,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new r.a;if("2d"===n.type)o=t*n.resolution;else if("3d"===n.type){var s=n.overlayPixelSizeInMapUnits(e),u=n.basemapSpatialReference;o=Object(i.k)(u)&&!u.equals(n.spatialReference)?Object(a.c)(u)/Object(a.c)(n.spatialReference):t*s}var c=e.x-o,f=e.y-o,d=e.x+o,_=e.y+o,v=n.spatialReference;return l.xmin=Math.min(c,d),l.ymin=Math.min(f,_),l.xmax=Math.max(c,d),l.ymax=Math.max(f,_),l.spatialReference=v,l}new r.a}}]);
//# sourceMappingURL=58.75904882.chunk.js.map